<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goisan.system.dao.ClassDao">

    <select id="getClassList" parameterType="com.goisan.system.bean.ClassBean"
            resultType="com.goisan.system.bean.ClassBean">
        SELECT class_id                                                                                                 classId,
        class_name                                                                                               className,
        year,
        t.departments_id                                                                                         departmentsId,
        class_type                                                                                               classType,
        t.major_code                                                                                             majorCode,
        head_teacher                                                                                             headTeacher,
        study_type                                                                                               studyType,
        spring_autumn                                                                                            springAutumn,
        create_term                                                                                              createTerm,
        graduation_flag                                                                                          graduationFlag,
        FUNC_GET_TABLEVALUE(t.departments_id, 'T_SYS_DEPT', 'DEPT_ID',
        'DEPT_NAME')                                                                         departmentsIdShow,
        FUNC_GET_DICVALUE(year, 'ND')                                                                            yearShow,
        FUNC_GET_DICVALUE(class_type, 'ZJBJLX')                                                                  classTypeShow,
        FUNC_GET_DICVALUE(study_type, 'XXXS')                                                                    studyTypeShow,
        FUNC_GET_TABLEVALUE(t.major_code, 't_xg_major', 'major_code', 'major_name')
        || ' -- ' || FUNC_GET_DICVALUE(t.major_direction, 'ZXZYFX') || ' -- ' || FUNC_GET_DICVALUE(t.training_level,
        'ZXZYPYCC') majorCodeShow,
        FUNC_GET_TABLEVALUE(head_teacher, 'T_RS_EMPLOYEE', 'person_id', 'name')
        || DECODE(head_teacher_dept, '', '', ' --- ')
        || FUNC_GET_TABLEVALUE(head_teacher_dept, 'T_SYS_DEPT', 'DEPT_ID',
        'DEPT_NAME')                                                                    headTeacherShow,
        FUNC_GET_DICVALUE(spring_autumn, 'CQJ')                                                                  springAutumnShow,
        FUNC_GET_DICVALUE(graduation_flag, 'BJZT')                                                               graduationFlagShow,
        t.major_direction                                                                                        majorDirection,
        head_teacher_dept                                                                                        headTeacherDept,
        FUNC_GET_TABLEVALUE(head_teacher_dept, 'T_SYS_DEPT', 'DEPT_ID',
        'DEPT_NAME')                                                                         headTeacherDeptShow,
        FUNC_GET_TABLEVALUE(room_id, 'T_JW_CLASSROOM', 'ID', 'CLASS_ROOM_NAME')                                  roomId,
        t.create_time                                                                                            createTime,
        t.class_code                                                                                              classCode
        FROM T_XG_CLASS t,
        t_xg_major m
        WHERE 1 = 1
        AND t.valid_flag = 1
        AND t.MAJOR_CODE = m.MAJOR_CODE
        AND t.TRAINING_LEVEL = m.TRAINING_LEVEL
        <if test="departmentsId != null and departmentsId != '' ">
            AND t.departments_id = #{departmentsId}
        </if>
        <if test="year != null and year != '' ">
            AND year = #{year}
        </if>
        <if test="className != null and className != '' ">
            AND class_name like #{className}
        </if>
        <if test="trainingLevel != null and trainingLevel != ''">
            and m.TRAINING_LEVEL in (${trainingLevel})
        </if>
        order by t.create_time desc
    </select>
    <select id="getClassByClassid" parameterType="java.lang.String"
            resultType="com.goisan.system.bean.ClassBean">
      SELECT class_id classId,class_name className,year,departments_id departmentsId,
            class_type classType,major_code majorCode,head_teacher headTeacher,study_type studyType,
            spring_autumn springAutumn,create_term createTerm,graduation_flag graduationFlag,
            FUNC_GET_TABLEVALUE(departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsIdShow ,
            FUNC_GET_TABLEVALUE(major_code,'t_xg_major','major_code','major_name') majorCodeShow,
            major_direction  majorDirection,training_level trainingLevel,head_teacher_dept headTeacherDept ,
            FUNC_GET_DICVALUE(study_type ,'XXXS') studyTypeShow,
            FUNC_GET_TABLEVALUE(head_teacher_dept,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') headTeacherDeptShow,
            FUNC_GET_TABLEVALUE(head_teacher,'T_RS_EMPLOYEE','person_id','name') headTeacherShow,
            room_id roomId,class_code  classCode
      FROM
        T_XG_CLASS
        WHERE class_id = #{classId}
    </select>
    <insert id="insertClass" parameterType="com.goisan.system.bean.ClassBean">
      INSERT INTO  T_XG_CLASS
      (class_id,class_name,year,departments_id,class_type,major_code
      ,head_teacher,spring_autumn,create_term,graduation_flag,head_teacher_dept,room_id
      ,creator,create_time,create_dept,valid_flag,major_direction,training_level,study_type,class_code)
      VALUES
      (func_get_uuid,'${className}','${year}','${departmentsId}','${classType}','${majorCode}'
      ,'${headTeacher}','${springAutumn}','${createTerm}','${graduationFlag}','${headTeacherDept}','${roomId}'
      ,'${creator}',sysdate,'${createDept}',1 ,'${majorDirection}','${trainingLevel}','${studyType}','${classCode}')
    </insert>
    <select id="getClassByClass" parameterType="com.goisan.system.bean.ClassBean" resultType="com.goisan.system.bean.ClassBean">
        SELECT  *  FROM T_XG_CLASS WHERE CLASS_NAME = #{className}
        <if test="classId != null and classId != '' ">
            AND class_id != #{classId}
        </if>
    </select>
    <update id="updateClass" parameterType="com.goisan.system.bean.ClassBean">
      UPDATE T_XG_CLASS SET
          class_name = #{className},
          year = #{year},
          departments_id  = #{departmentsId},
          class_type = #{classType},
          major_code = #{majorCode},
          head_teacher = #{headTeacher},
          spring_autumn = #{springAutumn},
          create_term = #{createTerm},
          graduation_flag = #{graduationFlag},
          major_direction = #{majorDirection},
          training_level = #{trainingLevel},
          study_type = #{studyType},
          head_teacher_dept = #{headTeacherDept},
          room_id=#{roomId},
          class_code=#{classCode}
      WHERE class_id = #{classId}
    </update>
    <delete id="delClass" parameterType="java.lang.String">
        <!--UPDATE T_XG_CLASS SET valid_flag = 0 WHERE class_id = #{classId}-->
        delete from T_XG_CLASS WHERE class_id = #{classId}
    </delete>
    <select id="getClassListByStudentid" parameterType="java.lang.String"
            resultType="com.goisan.system.bean.ClassBean">
        SELECT
            t.class_id classId,t.class_name className,t.year,t.departments_id departmentsId,
            t.class_type classType,t.major_code majorCode,t.head_teacher headTeacher,
            t.spring_autumn springAutumn,t.create_term createTerm,t.graduation_flag graduationFlag,
            FUNC_GET_TABLEVALUE(t.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsIdShow ,
            FUNC_GET_DICVALUE(class_type ,'year') yearShow,
            FUNC_GET_DICVALUE(t.class_type ,'ZJBJLX') classTypeShow,
            FUNC_GET_TABLEVALUE(t.major_code,'t_xg_major','major_code','major_name') majorCodeShow,
            FUNC_GET_TABLEVALUE(t.head_teacher,'T_RS_EMPLOYEE','person_id','name') headTeacherShow,
            FUNC_GET_DICVALUE(t.spring_autumn,'CQJ') springAutumnShow,
            FUNC_GET_DICVALUE(t.graduation_flag ,'BJZT') graduationFlagShow,
            major_direction majorDirection,head_teacher_dept headTeacherDept ,
            FUNC_GET_TABLEVALUE(head_teacher_dept,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') headTeacherDeptShow,
            FUNC_GET_TABLEVALUE(t.room_id,'T_JW_CLASSROOM','ID','CLASS_ROOM_NAME') roomId
        FROM
            T_XG_CLASS t , T_XG_STUDENT_CLASS c
        WHERE
            1 = 1 AND t.valid_flag = 1 and t.class_id = c.class_id AND c.student_id = #{studentid}
</select>
    <select id="findClassListByMajorCons" parameterType="java.lang.String"
            resultType="com.goisan.system.bean.ClassBean">
        SELECT *
        FROM
        T_XG_CLASS c,T_XG_MAJOR m
        WHERE c.DEPARTMENTS_ID=m.DEPARTMENTS_ID
        and c.MAJOR_CODE=m.MAJOR_CODE
        and c.TRAINING_LEVEL=m.TRAINING_LEVEL
        and m.departments_id  = #{departmentsId}
        and m.major_code = #{majorCode}
        and m.training_level = #{trainingLevel}
    </select>
    <select id="selectClassBeranByClassName" parameterType="java.lang.String"
            resultType="com.goisan.system.bean.ClassBean">
        SELECT *
        FROM
        T_XG_CLASS where
        class_name= #{className} AND rownum = 1
        <if test="classType != null and classType != ''">and class_type= #{classType}</if>

    </select>
    <select id="getStudentListByClassId" parameterType="java.lang.String" resultType="com.goisan.system.bean.Student">
        SELECT
            FUNC_GET_TABLEVALUE(t.CLASS_ID,'T_XG_CLASS','class_id','class_name') classShow,
            t.student_id,
            s.name "name",
            FUNC_GET_DICVALUE(s.sex,'XB') sex,
            s.STUDENT_NUMBER  studentNumber,
            s.IDCARD idcard
        FROM
            T_XG_STUDENT_CLASS  t,T_XG_STUDENT s
        WHERE
              t.STUDENT_ID = s.STUDENT_ID
              and
              s.STUDENT_STATUS = '1'
              and
            t.CLASS_ID = #{classId}
    </select>

    <select id="getZJStuListByClassId" resultType="com.goisan.system.bean.Student">
        select s.student_id,s.name from T_XG_STUDENT_CLASS  t,T_XG_STUDENT s
        where t.class_id = #{classId} and t.student_id = s.student_id
        and s.student_status ='1'
    </select>

    <select id="getBYStuListByClassId" resultType="com.goisan.system.bean.Student">
        select s.student_id,s.name from T_XG_STUDENT_CLASS  t,T_XG_STUDENT s
        where t.class_id = #{classId} and t.student_id = s.student_id
        and s.student_status ='1'
    </select>
</mapper>