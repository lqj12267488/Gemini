<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goisan.studentwork.studentleave.dao.StudentLeaveDao">
    <select id="getStudentLeaveList" resultType="com.goisan.studentwork.studentleave.bean.StudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        SELECT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd') startTime,
        to_char(t.end_time,'yyyy-mm-dd') endTime,
        t.request_days requestDays,
        FUNC_GET_DICVALUE(t.leave_type,'JTLX')  leaveType,
        FUNC_GET_TABLEVALUE(t.student_id,'T_XG_STUDENT','STUDENT_ID','NAME') studentId,
         t.reason reason,
        t.request_flag,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag,
        t.student_number studentNumber,
        t.departments_id departmentsId,
        t.major_code majorCode,
        t.class_id classId,
        t.sex sex
         FROM
        T_XG_STUDENT_LEAVE_WF t
        where 1 = 1  AND t.request_flag = '0'
        <if test="creator != 'sa'  and creator != null and creator != '' ">
            AND t.creator= #{creator}
        </if>
        <if test="leaveType != '' and  leaveType != null">
            AND t.leave_type = #{leaveType}
        </if>
        <if test="requestDate != null and requestDate != '' ">
            AND  to_char(t.request_date,'yyyy-mm-dd') LIKE #{requestDate}
        </if>
        <if test="createDept != null and createDept != '' ">
            AND t.create_dept= #{createDept}
        </if>
        ORDER BY t.create_time desc
    </select>

    <select id="getLeaveBy" resultType="com.goisan.studentwork.studentleave.bean.StudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        SELECT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd')  as startTime,
        to_char(t.end_time,'yyyy-mm-dd') as endTime,
        t.request_days requestDays,
        FUNC_GET_DICVALUE(t.leave_type,'JTLX')  leaveType,
         FUNC_GET_TABLEVALUE(t.student_id,'T_XG_STUDENT','STUDENT_ID','NAME') studentId,
         FUNC_GET_TABLEVALUE(t.class_id,'T_XG_CLASS','CLASS_ID','CLASS_NAME') classId,
        FUNC_GET_TABLEVALUE(t.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsId,
        FUNC_GET_TABLEVALUE(t.major_code,'t_xg_major','major_code','major_name') majorCode,
        FUNC_GET_DICVALUE(sex, 'XB') sex,
        t.student_number studentNumber,
        t.reason reason,
        t.request_flag,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag
        FROM
        T_XG_STUDENT_LEAVE_WF t
        WHERE id = #{id}
        ORDER BY t.create_time desc
    </select>
    <select id="getStudentLeaveById" resultType="com.goisan.studentwork.studentleave.bean.StudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        SELECT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd') || 'T' || to_char(t.request_date,'hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd')  as startTime,
        to_char(t.end_time,'yyyy-mm-dd') as endTime,
        FUNC_GET_DICVALUE(t.leave_type,'JTLX') leaveTypeShow,
         FUNC_GET_TABLEVALUE(t.student_id,'T_XG_STUDENT','STUDENT_ID','NAME') studentName,
         FUNC_GET_TABLEVALUE(t.class_id,'T_XG_CLASS','CLASS_ID','CLASS_NAME') classId,
        FUNC_GET_TABLEVALUE(t.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsId,
        FUNC_GET_TABLEVALUE(t.major_code,'t_xg_major','major_code','major_name') majorCode,
        FUNC_GET_DICVALUE(sex, 'XB') sex,
        t.request_days requestDays,
        t.leave_type leaveType,
        t.reason reason,
        t.request_flag,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag,
        t.student_number studentNumber,
        t.student_id studentId
        FROM
        T_XG_STUDENT_LEAVE_WF t
        WHERE id = #{id}

        ORDER BY t.create_time desc
    </select>

    <insert id="insertStudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        INSERT INTO
       T_XG_STUDENT_LEAVE_WF
        (id,request_dept,requester,request_date,start_time,end_time,request_days,leave_type,reason,creator,create_time,create_dept,request_flag,student_number,departments_id,major_code,class_id,student_id,sex) values
        (FUNC_GET_UUID,'${createDept}','${creator}',to_date('${requestDate}','yyyy-mm-dd hh24:mi'),to_date('${startTime}','yyyy-mm-dd'),to_date('${endTime}','yyyy-mm-dd'),'${requestDays}','${leaveType}','${reason}','${creator}',sysdate,'${createDept}','0','${studentNumber}','${departmentsId}','${majorCode}','${classId}','${studentId}','${sex}')
    </insert>
    <!--<insert id="updateLeaveAPP" parameterType="com.goisan.personnel.leave.bean.Leave">
        INSERT INTO
        T_RS_LEAVE_WF
        (id,request_dept,requester,request_date,start_time,end_time,request_days,leave_type,reason,creator,create_time,create_dept,request_flag) values
        ('${id}','${createDept}','${creator}',to_date('${requestDate}','yyyy-mm-dd hh24:mi'),to_date('${startTime}','yyyy-mm-dd'),to_date('${endTime}','yyyy-mm-dd'),'${requestDays}','${leaveType}','${reason}','${creator}',sysdate,'${createDept}','0')
    </insert>-->
    <delete id="deleteStudentLeaveById"  parameterType="java.lang.String">
        DELETE FROM T_XG_STUDENT_LEAVE_WF WHERE id = #{id}
    </delete>
    <update id="updateStudentLeaveById" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        update
        T_XG_STUDENT_LEAVE_WF
        SET
        id = #{id},
        request_days = #{requestDays},
        leave_type = #{leaveType},
        request_date = to_date(#{requestDate},'yyyy-mm-dd hh24:mi'),
        start_time = to_date(#{startTime},'yyyy-mm-dd'),
        end_time = to_date(#{endTime},'yyyy-mm-dd'),
        reason = #{reason},
        changer= #{changer},
        change_time= sysdate,
        change_dept= #{changeDept},
        student_id=#{studentId},
        student_number=#{studentNumber}
        WHERE
        id = #{id}
    </update>
    <select id="autoCompleteDept" parameterType="java.lang.String" resultType="com.goisan.system.bean.AutoComplete">
        select
        t.dept_id as "value",
        t.dept_name as "label"
        FROM T_SYS_DEPT t
    </select>
    <select id="autoCompleteEmployee" parameterType="java.lang.String" resultType="com.goisan.system.bean.AutoComplete">
        select
        t.name as "label",
        t.person_id as "value"
        FROM T_RS_EMPLOYEE t
        where t.person_id in(select person_id from t_rs_employee_dept where dept_id like FUNC_GET_SCHOOL_RANGE (#{deptId},#{level}))
    </select>
    <select id="getProcessList" resultType="com.goisan.studentwork.studentleave.bean.StudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        SELECT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd') startTime,
        to_char(t.end_time,'yyyy-mm-dd') endTime,
        t.request_days requestDays,
        FUNC_GET_DICVALUE(t.leave_type,'JTLX') leaveType,
        FUNC_GET_TABLEVALUE(t.student_id,'T_XG_STUDENT','STUDENT_ID','NAME') studentId,
        t.reason reason,
        t.request_flag,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag
        FROM
        T_XG_STUDENT_LEAVE_WF t,t_sys_workflow_start s,t_sys_workflow_handle r
        where 1 = 1
        <if test="creator != 'sa'  and creator != null and creator != '' ">
            AND r.handle_user= #{creator}
        </if>
        <if test="requestDept != null and requestDept != '' ">
            AND func_get_deptname(t.request_dept) LIKE #{requestDept}
        </if>
        <if test="createDept != null and createDept != '' ">
            AND r.handle_dept= #{createDept}
        </if>
        <if test="requester != null and requester != '' ">
            AND FUNC_GET_USERNAME(t.requester) LIKE #{requester}
        </if>
        <if test="requestDate != null and requestDate != '' ">
            AND to_char(t.request_date,'yyyy-mm-dd') LIKE #{requestDate}
        </if>
        AND (r.state='1'  or  r.state='3')AND  t.id = s.business_id AND s.start_id = r.start_id AND t.request_flag != '4'
        ORDER BY t.create_time desc
    </select>
    <select id="getCompleteList" resultType="com.goisan.studentwork.studentleave.bean.StudentLeave" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        SELECT
        DISTINCT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd') startTime,
        to_char(t.end_time,'yyyy-mm-dd') endTime,
        t.request_days requestDays,
        FUNC_GET_DICVALUE(t.leave_type,'JTLX') leaveType,
        FUNC_GET_TABLEVALUE(t.student_id,'T_XG_STUDENT','STUDENT_ID','NAME') studentName,
        t.reason reason,
        FUNC_GET_DICVALUE(t.request_flag,'GZLLZZT') requestFlag,
        FUNC_GET_DICVALUE(t.feedback_flag,'GZLFKZT') feedbackFlag,
        t.feedback feedBack,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag,
        t.sex,
        t.departments_id departmentsId,
        t.student_id  studentId,
        t.class_id classId,
        t.student_number

        FROM
        T_XG_STUDENT_LEAVE_WF t,t_sys_workflow_start s,t_sys_workflow_handle r
        where 1 = 1
        <if test="creator != 'sa'  and creator != null and creator != '' ">
            AND r.handle_user= #{creator}
        </if>
        <if test="requestDept != null and requestDept != '' ">
            AND func_get_deptname(t.request_dept) LIKE #{requestDept}
        </if>
        <if test="requester != null and requester != '' ">
            AND FUNC_GET_USERNAME(t.requester) LIKE #{requester}
        </if>
        <if test="createDept != null and createDept != '' ">
            AND r.handle_dept= #{createDept}
        </if>
        <if test="requestDate != null and requestDate != '' ">
            AND to_char(t.request_date,'yyyy-mm-dd') LIKE #{requestDate}
        </if>
        AND r.state='2' AND  t.id = s.business_id AND s.start_id = r.start_id
        ORDER BY t.create_time desc
    </select>
    <select id="getLeaveCancelList" resultType="com.goisan.personnel.leave.bean.Leave" parameterType="com.goisan.personnel.leave.bean.Leave">
        SELECT
        DISTINCT
        t.id,
        FUNC_GET_DEPTNAME(t.request_dept) requestDept,
        to_char(t.request_date,'yyyy-mm-dd hh24:mi')  requestDate,
        FUNC_GET_USERNAME(t.requester) requester,
        to_char(t.start_time,'yyyy-mm-dd') startTime,
        to_char(t.end_time,'yyyy-mm-dd') endTime,
        t.request_days requestDays,
        FUNC_GET_DICVALUE(t.leave_type,'QJLX') leaveType,
        t.reason reason,
        FUNC_GET_DICVALUE(t.request_flag,'GZLLZZT') requestFlag,
        FUNC_GET_DICVALUE(t.feedback_flag,'GZLFKZT') feedbackFlag,
        t.feedback feedBack,
        t.creator,
        t.create_time,
        t.create_dept,
        t.changer,
        t.change_time,
        t.change_dept,
        t.valid_flag
        FROM
        T_RS_LEAVE_WF t,t_sys_workflow_start s,t_sys_workflow_handle r
        where 1 = 1 AND feedback_flag = 1
        <if test="requestDate != null and requestDate != '' ">
            AND  to_char(t.request_date,'yyyy-mm-dd') LIKE #{requestDate}
        </if>
        AND r.state='2' AND  t.id = s.business_id AND s.start_id = r.start_id
        ORDER BY t.create_time desc
    </select>
    <select id="getPersonNameById" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT name from t_rs_employee WHERE  person_id = #{personId}
    </select>
    <select id="getDeptNameById" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT dept_name from t_sys_dept WHERE  dept_id = #{deptId}
    </select>
    <update id="updateStudentLeaveAPP" parameterType="com.goisan.studentwork.studentleave.bean.StudentLeave">
        update
        T_XG_STUDENT_LEAVE_WF
        SET
        id = #{id},
        request_dept = #{requestDept},
        requester = #{requester},
        request_date = to_date(#{requestDate},'yyyy-mm-dd hh24:mi'),
        start_time = to_date(#{startTime},'yyyy-mm-dd hh24:mi'),
        end_time = to_date(#{endTime},'yyyy-mm-dd hh24:mi'),
        request_days = #{requestDays},
        leave_type = #{leaveType},
        reason = #{reason},
        creator=#{creator},
        create_time=sysdate,
        changer = #{creator},
        change_time= sysdate,
        change_dept= #{createDept}
        WHERE
        id = #{id}
    </update>
</mapper>
