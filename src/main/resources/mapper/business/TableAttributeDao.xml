<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goisan.tabular.dao.TableAttributeDao">
    <!--modify by lihanyue start-->
    <select id="getExpertExcel_A1_6" resultType="com.goisan.system.bean.Dept">
        select t.dept_id, t.dept_name
        from T_SYS_DEPT t
        where t.dept_id != '001'
    </select>
    <select id="getContactInformationList"  resultType="com.goisan.table.bean.ContactInformation">
        select
            id,mailing_address,postal_code,school_website,
            area_number,area_fax,mail_box,creator,create_time,
            area_person areaPerson,
            contacts_person contactsPerson,
            FUNC_GET_TABLEVALUE(area_person,'T_RS_EMPLOYEE','person_id','STAFF_ID')  areaStaff,
            FUNC_GET_TABLEVALUE(area_person,'T_RS_EMPLOYEE','person_id','post')  areaPost,
            FUNC_GET_TABLEVALUE(contacts_person,'T_RS_EMPLOYEE','person_id','STAFF_ID')  areaContactsStaff,
            FUNC_GET_TABLEVALUE(contacts_person,'T_RS_EMPLOYEE','person_id','TEL')  areaContactsPhone,
            FUNC_GET_TABLEVALUE(contacts_person,'T_RS_EMPLOYEE','person_id','post')  areaContactsPost,
            FUNC_GET_USERNAME(area_person)  areaPersonName,
            FUNC_GET_USERNAME(contacts_person)  contactsPersonName,
            create_dept,changer,change_time,change_dept,valid_flag,
            contacts_area_number,contacts_area_fax,contacts_mail_box
        from T_TAB_CONTACT_INFORMATION where 1=1
    </select>
    <select id="getExpertExcel_A2" resultType="com.goisan.system.bean.Emp">
        select STAFF_ID                                                 staffId,
               "NAME"                                                   name,
               func_get_dicvalue(NATION, 'MZ')                          nation,
               POST                                                     post,
               POSITIONAL_TITLES                                        positionalTitles,
               func_get_dicvalue(EDUCATIONAL_LEVEL, 'WHCD')             educationalLevel,
               func_get_dicvalue(sex, 'XB')                             sex,
               to_char(BIRTHDAY, 'yyyyMMdd')                            birthdayShow,
               wmsys.wm_concat(FUNC_GET_DICVALUE(s.resultType, 'CGLX')) educationalResearch,
               TEL                                                      tel
        from t_rs_employee e
                 left join (select personId,
                                   resultType
                            FROM (select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_PROJECT pr
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_STANDARD st
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_MEDICINE me
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_PAPER pa
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_ART ar
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_GUIDE gu
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_WRITING wr
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_PATENT pa
                                  UNION ALL
                                  select id          id,
                                         person_id   personId,
                                         RESULT_TYPE resultType
                                  from T_JW_TEACHINGRESULT_REPORT re)) s on e.person_id = s.personId
            and person_id in
                (select distinct person_id
                 from t_rs_employee_dept_role
                 where role_id in (select t.role_id
                                   from T_SYS_ROLE t
                                   where t.role_name like '%领导%'
                                      or t.role_name like '%院长%'
                                      or t.role_name like '%主任%'))
        group by STAFF_ID,
                 name,
                 nation,
                 post,
                 POSITIONAL_TITLES,
                 EDUCATIONAL_LEVEL,
                 sex,
                 BIRTHDAY,
                 TEL
    </select>
    <select id="getExpertExcel_A2_2" resultType="com.goisan.table.bean.TeachContact">
        select id,
               tc.person_id,
               responsibilities,
               attend_lectures,
               student_dorm,
               outside_practice,
               student_club_activities,
               e.name     personIdShow,
               e.staff_id staffId
        from T_TAB_TEACH_CONTACT tc,
             t_rs_employee e
        where tc.person_id = e.person_id
    </select>
    <select id="getInstitutionalAreaList" resultType="com.goisan.table.bean.InstitutionalArea">
        select id,
               area_covered,
               green_land_area,
               building_area,
               school_property_area,
               school_building,
               wrong_school_property,
               scientific_auxiliary,
               classroom,
               library,
               laboratories_places,
               research_room,
               gymnasium,
               hall,
               administrative_office,
               college_area_room,
               student_dormitory,
               student_canteen,
               teaching_dormitory,
               staff_can,
               life_welfare,
               faculty_housing,
               other_rooms,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_INSTITUTIONAL_AREA
        where 1 = 1  and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getBookCollectionList" resultType="com.goisan.table.bean.BookCollection">
        select id,
               total_number,
               school_year_add,
               chinese_paper_journal,
               foreign_paper_journals,
               electronic_journal,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_BOOK_COLLECTION
        where 1 = 1  and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getMachineClassroomList" resultType="com.goisan.table.bean.MachineClassroom">
        select id,
               reading_room_seat,
               computer_number,
               teaching_computer,
               tablet_pc,
               public_computer_room,
               professional_computer,
               classroom,
               multimedia_classroom,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_MACHINE_CLASSROOM
        where 1 = 1  and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getGeneralConstructionList" resultType="com.goisan.table.bean.GeneralConstruction">
        select creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag,
               id,
               internet_bandwidth,
               network_bandwidth,
               one_card_use,
               func_get_dicvalue(one_card_use, 'SF')          oneCardUseShow,
               wireless_coverage,
               func_get_dicvalue(wireless_coverage, 'WXFGQK') wirelessCoverageShow,
               network_information,
               management_information,
               system_mail_number,
               online_courses,
               digital_resources,
               electronics_book
        from T_TAB_GENERAL_CONSTRUCTION
        where 1 = 1  and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getManagementInformationList" resultType="com.goisan.table.bean.ManagementInformation">
        select id,
               type,
               func_get_dicvalue(type, 'GLXXXTLX')    typeShow,
               system_name,
               sources,
               func_get_dicvalue(sources, 'GLXXXTLY') sourcesShow,
               unit_name,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_MANAGEMENT_INFORMATION
        where 1 = 1
    </select>
    <select id="getInformationPersonnelList" resultType="com.goisan.table.bean.InformationPersonnel">
        select id,
               organization_code,
               organization_name,
               person_staff,
               person_name,
               staff_number,
               employe_number,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_INFORMATION_PERSONNEL
        where 1 = 1 and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getFixedAssetsList" resultType="com.goisan.table.bean.FixedAssets">
        select id,
               total_school_value,
               total_assets,
               assets_add,
               creator,
               create_time,
               create_dept,
               changer,
               change_time,
               change_dept,
               valid_flag
        from T_TAB_FIXED_ASSETS
        where 1 = 1 and  FUNC_GET_DICVALUE(particular_year, 'ND')=
        （select extract(year from sysdate) from dual）
    </select>
    <select id="getExpertExcel_A4_3" resultType="com.goisan.educational.skillappraisal.bean.SkillAppraisal">
        select ISSUING_OFFICE,
               PROJECT_LEVEL,
               PROFESSION_LEVEL,
               FUNC_GET_TABLEVALUE(pre_app_profession, 'T_JW_SKILL', 'ID', 'PROJECT_NAME') preAppProfession
        from T_JW_SKILLAPPRAISAL
    </select>
    <select id="getExpertExcel_A8_2" resultType="com.goisan.system.bean.Emp">
        /*select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               s.dept_name                                    deptName,
               POST
        from T_RS_EMPLOYEE t
                 left join T_RS_EMPLOYEE_DEPT a on t.person_id = a.person_id
                 left join t_sys_dept s on a.dept_id = s.dept_id
                 left join ,t_tab_staff t1 on t.person_id = t1.PERSONID*/
        select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               t1.GRADE,
               t1.GIVENNAME,
               t1.ISSUER,
               to_char(t1.getdate, 'yyyyMMdd')                getDateShow,
               t1.TEACHINGMANAGEMENT,
               t1.postfunction,
               t1.workingyears,
               t.post,
               t2.dept_id,
               FUNC_GET_DEPTNAME(t2.dept_id) deptName
        from T_RS_EMPLOYEE t,
             t_tab_staff t1,
             t_rs_employee_dept t2
        where t.person_id = t1.personid
          and t.person_id=t2.person_id
          and t1.type = 1

    </select>
    <select id="getExpertExcel_A8_3" resultType="com.goisan.system.bean.Emp">
        /*select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               s.dept_name                                    deptName,
               POST
        from T_RS_EMPLOYEE t
                 left join T_RS_EMPLOYEE_DEPT a on t.person_id = a.person_id
                 left join t_sys_dept s on a.dept_id = s.dept_id*/
        select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               func_get_dicvalue(t.STAFF_SOURCE,'JZGLY')      staffSource,
               t1.GRADE,
               t1.GIVENNAME,
               t1.ISSUER,
               to_char(t1.getdate, 'yyyyMMdd')                getDateShow,
               t1.STUDENTMANAGEMENT,
               t1.POLITICALCOUNSELOR,
               t1.PSYCHOLOGICALCONSULTANT,
               t1.postfunction,
               t1.workingyears,
               t2.dept_id,
               FUNC_GET_DEPTNAME(t2.dept_id) deptName
        from T_RS_EMPLOYEE t,
             t_tab_staff t1,
             t_rs_employee_dept t2
        where t.person_id = t1.personid
          and t.person_id=t2.person_id
          and t1.type = 2
    </select>
    <select id="getExpertExcel_A8_4" resultType="com.goisan.system.bean.Emp">
        /* select t.STAFF_ID,
                t.name                                         name,
                func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
                func_get_dicvalue(t.sex, 'XB')                 sex,
                to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
                func_get_dicvalue(t.nation, 'MZ')              nation,
                func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
                func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
                t.POSITIONAL_TITLES                            positionalTitles,
                func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
                func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
                s.dept_name                                    deptName,
                POST
         from T_RS_EMPLOYEE t
                  left join T_RS_EMPLOYEE_DEPT a on t.person_id = a.person_id
                  left join t_sys_dept s on a.dept_id = s.dept_id*/
        select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               func_get_dicvalue(t.STAFF_SOURCE,'JZGLY')      staffSource,
               t1.GRADE,
               t1.GIVENNAME,
               t1.ISSUER,
               to_char(t1.getdate, 'yyyyMMdd')                getDateShow,
               t1.EMPLOYMENTOFFICE,
               t1.postfunction,
               t1.workingyears,
               t2.dept_id,
               FUNC_GET_DEPTNAME(t2.dept_id) deptName
        from T_RS_EMPLOYEE t,
             t_tab_staff t1,
             t_rs_employee_dept t2
        where t.person_id = t1.personid
          and t.person_id=t2.person_id
          and t1.type = 3
    </select>
    <select id="getExpertExcel_A8_5" resultType="com.goisan.system.bean.Emp">
        /*select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               s.dept_name                                    deptName,
               POST
        from T_RS_EMPLOYEE t
                 left join T_RS_EMPLOYEE_DEPT a on t.person_id = a.person_id
                 left join t_sys_dept s on a.dept_id = s.dept_id*/

        select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               func_get_dicvalue(t.STAFF_SOURCE,'JZGLY')      staffSourceShow,
               t1.GRADE,
               t1.GIVENNAME,
               t1.ISSUER,
               to_char(t1.getdate, 'yyyyMMdd')                getDateShow,
               t1.WORKINGHOURS,
               t1.EXPERTISE
        from T_RS_EMPLOYEE t,
             t_tab_staff t1
        where t.person_id = t1.personid
          and t1.type = 4
    </select>
    <select id="getExpertExcel_A8_6" resultType="com.goisan.system.bean.Emp">
        /*select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               s.dept_name                                    deptName,
               POST
        from T_RS_EMPLOYEE t
                 left join T_RS_EMPLOYEE_DEPT a on t.person_id = a.person_id
                 left join t_sys_dept s on a.dept_id = s.dept_id*/
        select t.STAFF_ID,
               t.name                                         name,
               func_get_dicvalue(t.STAFF_FLAG, 'SF')          staffFlag,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               to_char(t.BIRTHDAY, 'yyyyMMdd')                birthdayShow,
               func_get_dicvalue(t.nation, 'MZ')              nation,
               func_get_dicvalue(t.ACADEMIC_DEGREE, 'XW')     academicDegree,
               func_get_dicvalue(t.EDUCATIONAL_LEVEL, 'WHCD') educationalLevel,
               t.POSITIONAL_TITLES                            positionalTitles,
               func_get_dicvalue(t.POSITIONAL_LEVEL, 'ZCJB')  positionalLevel,
               func_get_dicvalue(t.WORK_YEAR, 'QYGZSC')       workYear,
               t1.GRADE,
               t1.GIVENNAME,
               t1.ISSUER,
               to_char(t1.getdate, 'yyyyMMdd')                getDateShow,
               t1.TOPICNATURE,
               t1.EXPERTISE,
               t1.SUBJECTCLASSIFICATION,
               t1.SUBJECTNAME,
               t1.HORIZONTALTOPIC,
               t1.SUBJECTGRADE,
               to_char(t1.PROJECTDATE, 'yyyyMMdd')            PROJECTDATESHOW,
               t1.SOURCEOFFUNDING,
               t1.COMPLETORORDER,
               t1.MONEY,
               t1.NUM,
               t1.HIGHESTGRADE,
               t1.COOPERATION
        from T_RS_EMPLOYEE t,
             t_tab_research t1
        where t.person_id = t1.personid
    </select>
    <select id="getExpertExcel_A8_7" parameterType="java.lang.String"
            resultType="com.goisan.evaluation.bean.EvaluationTask">
        SELECT Distinct t.task_type,
                        t.task_name                                                                                         name,
                        to_char(t.start_time, 'yyyymm')                                                                     starts,
                        to_char(t.end_time, 'yyyymm')                                                                       end,
                        (SELECT Count(*)
                         FROM T_KH_EVALUATION_EMPSLIST t
                         WHERE t.group_id in (SELECT k.emp_group_id
                                              FROM T_KH_EVALUATION_TASK k
                                              WHERE k.task_id in
                                                    (select t.task_id from T_KH_EVALUATION_TASK t where t.term = #{term}))) totalNumberEmp,
                        (SELECT Count(*)
                         FROM T_KH_EVALUATION_EMPSLIST t
                         WHERE t.group_id in (SELECT k.emp_group_id
                                              FROM T_KH_EVALUATION_TASK k,
                                                   t_kh_evaluation_emps_members m
                                              WHERE k.task_id in
                                                    (select t.task_id from T_KH_EVALUATION_TASK t where t.term = #{term})
                                                AND m.task_id = t.task_id
                                                AND m.emps_id = e.emps_id
                                                AND m.evaluation_flag = '1')
                           and t.emps_id in (SELECT m.emps_id
                                             FROM T_KH_EVALUATION_TASK k,
                                                  t_kh_evaluation_emps_members m
                                             WHERE k.task_id in
                                                   (select t.task_id from T_KH_EVALUATION_TASK t where t.term = #{term})
                                               AND m.task_id = t.task_id
                                               AND m.evaluation_flag = '1')
                        )                                                                                                   numberEmp,
                        (SELECT count(*)
                         FROM t_kh_evaluation_emps_members m
                         WHERE m.task_id = t.task_id
                           AND m.emps_id = e.emps_id)                                                                       totalNumber,
                        (SELECT count(*)
                         FROM t_kh_evaluation_emps_members m
                         WHERE m.task_id = t.task_id
                           AND m.emps_id = e.emps_id
                           AND m.evaluation_flag = '1') as                                                                  "number",
                        t.term
        FROM T_KH_EVALUATION_EMPSLIST e,
             T_KH_EVALUATION_TASK t
        where e.group_id = t.emp_group_id
          and t.task_id in (select t.task_id from T_KH_EVALUATION_TASK t where t.term = #{term})
        order by t.term
    </select>
    <select id="getExpertExcel_A8_8" resultType="com.goisan.studentwork.studentrewardpunish.bean.SchoolBurse">
        select count(*) nums, sum(BURSE_SUM) / 10000 burseSum, '奖学金' type, '学校奖学金' name
        from T_XG_STUDENTREWARD_SCHOOLBURSE
        union
        select count(*) nums, sum(BURSE_SUM) / 10000 burseSum, '奖学金' type, '政府奖学金' name
        from T_XG_STUDENTREWARD_STATEBURSE
        union
        select count(*) nums, sum(BURSE_SUM) / 10000 burseSum, '奖学金' type, '全日制奖学金' name
        from T_XG_STUDENTREWARD_FULLBURSE
        union
        select count(*) nums, sum(FREE_SUM) / 10000 burseSum, '减免学杂费' type, '免学费' name
        from T_XG_STUDENTREWARD_TUITIONFREE
        union
        select count(*) nums, sum(GRANT_SUM) / 10000 burseSum, '助学金' type, '助学金' name
        from T_XG_STUDENTREWARD_GRANTS
        union
        select count(*) nums, sum(LOAN_SUM) / 10000 burseSum, '助学贷款' type, '助学贷款' name
        from T_XG_STUDENTREWARD_LOAN
    </select>
    <select id="getExpertExcel_A10_1_2" resultType="com.goisan.studentwork.employments.bean.EmploymentManage">
        SELECT FUNC_GET_TABLEVALUE(t.student_id, 'T_XG_STUDENT', 'STUDENT_ID', 'name') studentId,
               FUNC_GET_TABLEVALUE(t.employment_unit_id,
                                   'T_XG_EMPLOYMENT_UNIT',
                                   'EMPLOYMENT_UNIT_ID',
                                   'INTERNSHIP_UNIT_NAME')                             employmentUnitIdShow,
               t.student_number                                                        studentNumber,
               func_get_dicvalue(n.EMPLOYMENT_PLACE, 'JYDD')                           employmentPlace,
               func_get_dicvalue(n.UNIT_PROPERTY, 'JYDWXZ')                            unitProperty,
               func_get_dicvalue(n.ENTERPRISE_SCALE, 'QYGM')                           enterpriseScale,
               func_get_dicvalue(t.SALARY, 'GZSRSP')                                   SALARY,
               func_get_dicvalue(t.MAJOR_MATCH_FLAG, 'SF')                             majorMatchFlag
        FROM T_XG_EMPLOYMENT_STUDENT t
                 left join T_XG_EMPLOYMENT_UNIT n on t.employment_id = n.employment_unit_id
    </select>
    <select id="getExpertExcel_A10_1" resultType="com.goisan.system.bean.Student">
        select t.student_number,
               t.name,
               func_get_dicvalue(t.sex, 'XB')                                              sex,
               func_get_dicvalue(t.nation, 'MZ')                                           nation,
               func_get_dicvalue(t.student_status, 'XJZT')                                 studentStatus,
               t.SOURCE_PLACE_DIVISION_CODE,
               func_get_dicvalue(t.FROM_ARMY, 'LZJD')                                      fromArmy,
               func_get_dicvalue(t.ADMISSIONS_WAY, 'ZSFS')                                 admissionsWay,
               func_get_dicvalue(t.STUDENT_SOURCE, 'SYLB')                                 studentSource,
               func_get_dicvalue(t.RURAL_HOUSEHOLD_REGISTRATIO, 'SF')                      ruralHouseholdRegisratio,
               func_get_dicvalue(t.ORDER_TRAINING, 'SF')                                   orderTraining,
               func_get_dicvalue(t.DOCUMENTARY_LIKA_POOR_FAMILIE, 'SF')                    documentaryLikaPoorFamilie,
               func_get_dicvalue(m.SCHOOL_SYSTEM, 'XZ')                                    schoolSystem,
               c.year || '08'                                                              years,
               t.TEST_SCORES,
               func_get_tablevalue(m.departments_id, 'T_SYS_DEPT', 'dept_id', 'dept_name') deptId,
               c.class_name,
               c.major_code,
               m.major_name,
               m.MAJOR_DIRECTION,
               func_get_dicvalue(m.major_direction, 'ZXZYFX')                              majorDirectionShow

        from t_xg_student t
                 left join t_xg_student_class sc on t.student_id = sc.student_id
                 left join t_xg_class c on sc.class_id = c.class_id
                 left join t_xg_major m on c.major_code = m.major_code
    </select>
    <select id="getExpertExcel_A10_2_1" resultType="com.goisan.system.bean.Student">
        select t.student_number,
               t.name,
               func_get_dicvalue(t.sex, 'XB')                 sex,
               c.class_name,
               c.major_code,
               m.major_name,
               m.MAJOR_DIRECTION,
               func_get_dicvalue(m.major_direction, 'ZXZYFX') majorDirectionShow
        from t_xg_student t
                 left join t_xg_student_class sc on t.student_id = sc.student_id
                 left join t_xg_class c on sc.class_id = c.class_id
                 left join t_xg_major m on c.major_code = m.major_code
        where t.student_status = '9'
    </select>
    <!--modify by lihanyue end-->
    <!--modify by yinzijian start-->
    <select id="getZhaoshengList" resultType="com.goisan.educational.major.bean.Major"
            parameterType="com.goisan.educational.major.bean.Major">
        SELECT M.MAJOR_ID,
               FUNC_GET_TABLEVALUE(M.DEPARTMENTS_ID, 'T_SYS_DEPT', 'DEPT_ID', 'DEPT_NAME') MAJOR_SCHOOL,
               M.MAJOR_CODE,
               M.MAJOR_NAME,
               M.MAJOR_DIRECTION_CODE,
               M.MAJOR_DIRECTION,
               P.PLAN_NUMBER,
               P.REAL_NUMBER
        FROM T_XG_MAJOR M
                 LEFT JOIN T_XG_ENROLLMENT_PLAN P ON M.MAJOR_ID = P.MAJOR_ID
    </select>
    <select id="getGraduationList" resultType="com.goisan.educational.major.bean.Major"
            parameterType="com.goisan.educational.major.bean.Major">
        SELECT
        M.MAJOR_ID,
        FUNC_GET_TABLEVALUE(M.DEPARTMENTS_ID,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') MAJOR_SCHOOL,
        M.MAJOR_CODE,
        M.MAJOR_NAME,
        M.MAJOR_DIRECTION_CODE,
        M.MAJOR_DIRECTION,
        DECODE(STUDENT_STATUS,'6', COUNT(STUDENT_STATUS),0)
        graduation, <!-- DECODE(STUDENT_STATUS,'1',10,'2',2,'3',3) S  过滤作用 判断如果是毕业的 查询显示毕业的人数-->
        COUNT(ES.EMPLOYMENT_ID) EMPLOYMENT
        FROM T_XG_MAJOR M LEFT JOIN T_XG_CLASS C ON M.MAJOR_CODE=C.MAJOR_CODE LEFT JOIN T_XG_STUDENT_CLASS SC ON
        C.CLASS_ID=SC.CLASS_ID LEFT JOIN T_XG_STUDENT S ON SC.STUDENT_ID=S.STUDENT_ID
        LEFT JOIN T_XG_EMPLOYMENT_STUDENT ES ON S.STUDENT_ID=ES.STUDENT_ID
        GROUP BY M.MAJOR_ID,
        M.MAJOR_SCHOOL,
        M.DEPARTMENTS_ID,
        M.MAJOR_CODE,
        M.MAJOR_NAME,
        M.MAJOR_DIRECTION_CODE,
        M.MAJOR_DIRECTION,
        STUDENT_STATUS,
        ES.EMPLOYMENT_ID
    </select>
    <select id="getPastgraduationList" parameterType="com.goisan.educational.major.bean.Major"
            resultType="com.goisan.educational.major.bean.Major">
        SELECT M.MAJOR_ID,
               FUNC_GET_TABLEVALUE(M.DEPARTMENTS_ID, 'T_SYS_DEPT', 'DEPT_ID', 'DEPT_NAME') MAJOR_SCHOOL,
               M.MAJOR_CODE,
               M.MAJOR_NAME,
               M.MAJOR_DIRECTION_CODE,
               M.MAJOR_DIRECTION,
               DECODE(STUDENT_STATUS, '6', COUNT(STUDENT_STATUS), 0)                       graduation,
               COUNT(ES.EMPLOYMENT_ID)                                                     EMPLOYMENT
        FROM T_XG_MAJOR M
                 LEFT JOIN T_XG_CLASS C ON M.MAJOR_CODE = C.MAJOR_CODE
                 LEFT JOIN T_XG_STUDENT_CLASS SC ON C.CLASS_ID = SC.CLASS_ID
                 LEFT JOIN T_XG_STUDENT S ON SC.STUDENT_ID = S.STUDENT_ID
                 LEFT JOIN T_XG_EMPLOYMENT_STUDENT ES ON S.STUDENT_ID = ES.STUDENT_ID
        GROUP BY M.MAJOR_ID,
                 M.MAJOR_SCHOOL,
                 M.DEPARTMENTS_ID,
                 M.MAJOR_CODE,
                 M.MAJOR_NAME,
                 M.MAJOR_DIRECTION_CODE,
                 M.MAJOR_DIRECTION,
                 STUDENT_STATUS,
                 ES.EMPLOYMENT_ID
    </select>
    <!--modify by yinzijian end-->

    <!--modify by lizhipeng start-->

    <!--modify by lizhipeng end-->


    <!--modify by hanjie start-->
    <select id="expertExcel_A6_1_2_1" resultType="com.goisan.tabular.bean.export.Export">
        select s.*, d.real_time realTime
  from (select FUNC_GET_DEPTNAME(k.DEPARTMENT) departmentName,
               FUNC_GET_DICVALUE(semester, 'XQ') semester,
               STAFF_ID,
               e.name teacherName,
               c.YEAR || '级' as schoolYear,
               c.MAJOR_CODE,
               FUNC_GET_TABLEVALUE(c.MAJOR_CODE,
                                   't_xg_major',
                                   'major_code',
                                   'major_name') majorName,
               c.MAJOR_DIRECTION,
               FUNC_GET_DICVALUE(c.MAJOR_DIRECTION, 'ZXZYFX') majorDirectionShow,
                 SUBSTR (FUNC_GET_DICVALUE(r.COURSE_TYPE, 'KCJSLX') ,1,2) courseType,
               FUNC_GET_DICVALUE(r.COURSE_PROPERTIES, 'KCJSSX') courseProperties,

               r.COURSE_NAME,
               r.course_code courseCode,

               k.teacher_id teacher_id,
               FUNC_GET_DICVALUE(k.teacher_task,'SKRW') teacherTask
          from T_JW_TEACHINGTASK k,
               t_rs_employee     e,
               T_XG_CLASS        c,
               T_JW_COURSE       r
         where k.teacher_id = e.person_id
           and c.class_id = k.class_info
           and k.course_id = r.course_id) s
  left join T_JW_FACULTY_LOAD d
    on s.teacher_id = d.teacher_id
    </select>

    <select id="expertExcel_A6_1_3" resultType="com.goisan.tabular.bean.export.Export">
        select L3.*, L4.*
        from (select distinct L2.person_id,
                              STAFF_ID,
                              teacherName,
                              TRAINING_CONTENT,
                              TRAINING_DAY,
                              TRAINING_PLACE,
                              rewordTime,
                              REWORD_NAME,
                              AWARD_UNIT,
                              rewordLevel
              from (
                       select STAFF_ID,
                              e.person_id,
                              e.name teacherName,
                              TRAINING_CONTENT,
                              TRAINING_DAY,
                              TRAINING_PLACE
                       from t_rs_employee e
                                left join T_JW_TRAINING t
                                          on e.person_id = t.teacher_id) L1
                       left join
                   (
                       select e.person_id,
                              to_char(d.REWORD_TIME, 'yyyymmdd')        rewordTime,
                              REWORD_NAME,
                              AWARD_UNIT,
                              FUNC_GET_DICVALUE(REWORD_LEVEL, 'JSJLJB') rewordLevel
                       from t_rs_employee e
                                left join T_JW_TEACHERREWORD d
                                          on e.person_id = d.reword_person_id
                   ) L2 on L1.person_id = L2.person_id) L3,
             t_tab_teacherschool L4
        where L3.person_id = L4.PERSONID
          and L4.TYPE = 1
        order by STAFF_ID

    </select>

    <select id="expertExcel_A6_2_1" resultType="com.goisan.tabular.bean.export.Export">
        SELECT c.teacher_id                                                               staffId,
               FUNC_GET_TABLEVALUE(c.department_id, 'T_SYS_DEPT', 'DEPT_ID', 'DEPT_NAME') departmentName,
               FUNC_GET_USERNAME(c.NAME)                                                  teacherName,
               FUNC_GET_DICVALUE(TEACHER_SEX, 'XB')                                       teacherSex,
               to_char(BIRTHDAY, 'yyyymmdd')                                              BIRTHDAY,
               FUNC_GET_DICVALUE(NATION, 'MZ')                                            nationShow,
               FUNC_GET_DICVALUE(DEGEE, 'XW')                                             DEGEE,
               FUNC_GET_DICVALUE(c.FINAL_EDUCATION, 'XL')                                 finalEducation,
               MAJOR_FIELD,
               MAJOR_SPECIALTY,
               WORK_YEAR,
               MAJOR_YEAR,
               MAJOR_GRADE,
               MAJOR_NAME                                                                 majorName2,
               MAJOR_DEPT,
               CAREER_DEPT,
               to_char(MAJOR_DATE, 'yyyymmdd')                                            majorDate,
               to_char(GETTIME, 'yyyymmdd')                                               getTime,
               LICENCE,
               to_char(CAREER_GETTIME, 'yyyymmdd')                                        careerGettime,
               EXPERT_WORK,
               FUNC_GET_DICVALUE(SFZY_TEACHER, 'SF')                                      sfzyTeacher,
               FUNC_GET_DICVALUE(SFSS_TEACHER, 'SF')                                      sfssTeacher,
               POLITICS_MAJORCODE,
               POLITICS_MAJORNAME
        FROM T_JW_TEACHER_CONDITION c
        where TEACHER_CATEGORY = 4
    </select>

    <select id="expertExcel_A6_2_2_1" resultType="com.goisan.tabular.bean.export.Export">
              select s.*, d.real_time realTime
  from (select FUNC_GET_DEPTNAME(k.DEPARTMENT)                                             departmentName,
               FUNC_GET_DICVALUE(semester, 'XQ')                                           semester,
               TEACHER_NUM                                                                 staffId,
               FUNC_GET_USERNAME(e.NAME)                                                   teacherName,
               c.YEAR || '级' as                                                            schoolYear,
               c.MAJOR_CODE,
               FUNC_GET_TABLEVALUE(c.MAJOR_CODE, 't_xg_major', 'major_code', 'major_name') majorName,
               c.MAJOR_DIRECTION,
               FUNC_GET_DICVALUE(c.MAJOR_DIRECTION, 'ZXZYFX')               majorDirectionShow,
                 SUBSTR (FUNC_GET_DICVALUE(r.COURSE_TYPE, 'KCJSLX') ,1,2) courseType,
               r.COURSE_NAME,
               r.course_code courseCode,
                FUNC_GET_DICVALUE(r.course_properties, 'KCJSSX')   courseProperties,
               FUNC_GET_DICVALUE(k.teacher_task,'SKRW') teacherTask, k.teacher_id teacher_id
        from T_JW_TEACHINGTASK k,
             T_JW_TEACHER_CONDITION e,
             T_XG_CLASS c,
             T_JW_COURSE r
        where k.teacher_id = e.name
          and c.class_id = k.class_info
          and k.course_id = r.course_id
          and e.TEACHER_CATEGORY = 4) s
  left join T_JW_FACULTY_LOAD d
    on s.teacher_id = d.teacher_id
    </select>

    <select id="expertExcel_A6_2_3" resultType="com.goisan.tabular.bean.export.Export">
        select L3.*, L4.*
        from (select distinct L2.person_id,
                              STAFF_ID,
                              teacherName,
                              TRAINING_CONTENT,
                              TRAINING_DAY,
                              TRAINING_PLACE,
                              rewordTime,
                              REWORD_NAME,
                              AWARD_UNIT,
                              rewordLevel
              from (
                       select STAFF_ID,
                              e.person_id,
                              e.name teacherName,
                              TRAINING_CONTENT,
                              TRAINING_DAY,
                              TRAINING_PLACE
                       from t_rs_employee e
                                left join T_JW_TRAINING t
                                          on e.person_id = t.teacher_id) L1
                       left join
                   (
                       select e.person_id,
                              to_char(d.REWORD_TIME, 'yyyymmdd')        rewordTime,
                              REWORD_NAME,
                              AWARD_UNIT,
                              FUNC_GET_DICVALUE(REWORD_LEVEL, 'JSJLJB') rewordLevel
                       from t_rs_employee e
                                left join T_JW_TEACHERREWORD d
                                          on e.person_id = d.reword_person_id
                   ) L2 on L1.person_id = L2.person_id) L3,
             t_tab_teacherschool L4
        where L3.person_id = L4.PERSONID
          and L4.TYPE = 2
        order by STAFF_ID
    </select>

    <select id="expertExcel_A6_3_1" resultType="com.goisan.tabular.bean.export.Export">
        SELECT TEACHER_NUM                                staffId,
               FUNC_GET_TABLEVALUE(c.department_id,
                                   'T_SYS_DEPT',
                                   'DEPT_ID',
                                   'DEPT_NAME')           departmentName,
               FUNC_GET_USERNAME(c.NAME)                  teacherName,
               FUNC_GET_DICVALUE(TEACHER_SEX, 'XB')       teacherSex,
               to_char(BIRTHDAY, 'yyyymmdd')              BIRTHDAY,
               FUNC_GET_DICVALUE(NATION, 'MZ')            nationShow,
               to_char(WORK_DATE, 'yyyymmdd')             workDate,

               FUNC_GET_DICVALUE(DEGEE, 'XW')             DEGEE,
               FUNC_GET_DICVALUE(c.FINAL_EDUCATION, 'XL') finalEducation,
               SIGNING,
               MAJOR_FIELD,
               MAJOR_SPECIALTY,
               WORK_YEAR,
               MAJOR_YEAR,
               MAJOR_GRADE,
               MAJOR_NAME                                 majorName2,
               MAJOR_DEPT,
               to_char(MAJOR_DATE, 'yyyymmdd')            majorDate,
               CAREER_GRADE,
               CAREER_NAME,
               CAREER_DEPT,
               to_char(CAREER_GETTIME, 'yyyymmdd')        careerGettime,
               to_char(GETTIME, 'yyyymmdd')               getTime,
               LICENCE,
               EXPERT_DEPT,
               EXPERT_WORK,
               to_char(EXPERT_DATE, 'yyyymmdd')           expertDate,
               FUNC_GET_DICVALUE(SFZY_TEACHER, 'SF')      sfzyTeacher,
               FUNC_GET_DICVALUE(SFSS_TEACHER, 'SF')      sfssTeacher,
               POLITICS_MAJORCODE,
               POLITICS_MAJORNAME,
               TRAINING_NAME,
               TRAINING_DAY,
               TRAINING_PLACE
        FROM T_JW_TEACHER_CONDITION c
        where TEACHER_CATEGORY = 3
    </select>

    <select id="expertExcel_A6_3_2_1" resultType="com.goisan.tabular.bean.export.Export">
         select s.*, d.real_time realTime
  from (select FUNC_GET_DEPTNAME(k.DEPARTMENT)                                             departmentName,
               FUNC_GET_DICVALUE(semester, 'XQ')                                           semester,
               TEACHER_NUM                                                                 staffId,
               FUNC_GET_USERNAME(e.NAME)                                                   teacherName,
               c.YEAR || '级' as                                                            schoolYear,
               c.MAJOR_CODE,
               FUNC_GET_TABLEVALUE(c.MAJOR_CODE, 't_xg_major', 'major_code', 'major_name') majorName,
               c.MAJOR_DIRECTION,
               FUNC_GET_DICVALUE(c.MAJOR_DIRECTION, 'ZXZYFX')                              majorDirectionShow,
                 SUBSTR (FUNC_GET_DICVALUE(r.COURSE_TYPE, 'KCJSLX') ,1,2) courseType,
               r.COURSE_NAME,r.course_code courseCode,
                FUNC_GET_DICVALUE(r.course_properties, 'KCJSSX')   courseProperties,
                FUNC_GET_DICVALUE(k.teacher_task,'SKRW') teacherTask, k.teacher_id teacher_id
        from T_JW_TEACHINGTASK k,
             T_JW_TEACHER_CONDITION e,
             T_XG_CLASS c,
             T_JW_COURSE r
        where k.teacher_id = e.name
          and c.class_id = k.class_info
          and k.course_id = r.course_id
          and e.TEACHER_CATEGORY = 3) s
  left join T_JW_FACULTY_LOAD d
    on s.teacher_id = d.teacher_id
    </select>

    <select id="expertExcel_A6_4_1" resultType="com.goisan.tabular.bean.export.Export">
        SELECT TEACHER_NUM                                staffId,
               FUNC_GET_TABLEVALUE(c.department_id,
                                   'T_SYS_DEPT',
                                   'DEPT_ID',
                                   'DEPT_NAME')           departmentName,
               FUNC_GET_USERNAME(c.NAME)                  teacherName,
               FUNC_GET_DICVALUE(TEACHER_SEX, 'XB')       teacherSex,
               to_char(BIRTHDAY, 'yyyymmdd')              BIRTHDAY,
               FUNC_GET_DICVALUE(NATION, 'MZ')            nationShow,
               to_char(WORK_DATE, 'yyyymmdd')             workDate,

               FUNC_GET_DICVALUE(DEGEE, 'XW')             DEGEE,
               FUNC_GET_DICVALUE(c.FINAL_EDUCATION, 'XL') finalEducation,
               SIGNING,
               MAJOR_FIELD,
               MAJOR_SPECIALTY,
               WORK_YEAR,
               MAJOR_YEAR,
               MAJOR_GRADE,
               MAJOR_NAME                                 majorName2,
               MAJOR_DEPT,
               to_char(MAJOR_DATE, 'yyyymmdd')            majorDate,
               CAREER_GRADE,
               CAREER_NAME,
               CAREER_DEPT,
               to_char(CAREER_GETTIME, 'yyyymmdd')        careerGettime,
               to_char(GETTIME, 'yyyymmdd')               getTime,
               LICENCE,
               EXPERT_DEPT,
               EXPERT_WORK,
               to_char(EXPERT_DATE, 'yyyymmdd')           expertDate,
               FUNC_GET_DICVALUE(SFZY_TEACHER, 'SF')      sfzyTeacher,
               FUNC_GET_DICVALUE(SFSS_TEACHER, 'SF')      sfssTeacher,
               POLITICS_MAJORCODE,
               POLITICS_MAJORNAME,
               TRAINING_NAME,
               TRAINING_DAY,
               TRAINING_PLACE
        FROM T_JW_TEACHER_CONDITION c
        where TEACHER_CATEGORY = 2
    </select>

    <select id="expertExcel_A6_4_2_1" resultType="com.goisan.tabular.bean.export.Export">
          select s.*, d.real_time realTime
  from (select FUNC_GET_DEPTNAME(k.DEPARTMENT)                                             departmentName,
               FUNC_GET_DICVALUE(semester, 'XQ')                                           semester,
               TEACHER_NUM                                                                 staffId,
               FUNC_GET_USERNAME(e.NAME)                                                   teacherName,
               c.YEAR || '级' as                                                            schoolYear,
               c.MAJOR_CODE,
               FUNC_GET_TABLEVALUE(c.MAJOR_CODE, 't_xg_major', 'major_code', 'major_name') majorName,
               c.MAJOR_DIRECTION,
               FUNC_GET_DICVALUE(c.MAJOR_DIRECTION, 'ZXZYFX')                              majorDirectionShow,
                SUBSTR (FUNC_GET_DICVALUE(r.COURSE_TYPE, 'KCJSLX') ,1,2) courseType,
               r.COURSE_NAME, r.course_code courseCode,
                FUNC_GET_DICVALUE(r.course_properties, 'KCJSSX')   courseProperties,
                FUNC_GET_DICVALUE(k.teacher_task,'SKRW') teacherTask, k.teacher_id teacher_id
        from T_JW_TEACHINGTASK k,
             T_JW_TEACHER_CONDITION e,
             T_XG_CLASS c,
             T_JW_COURSE r
        where k.teacher_id = e.name
          and c.class_id = k.class_info
          and k.course_id = r.course_id
          and e.TEACHER_CATEGORY = 2) s
  left join T_JW_FACULTY_LOAD d
    on s.teacher_id = d.teacher_id
    </select>


    <select id="expertExcel_A9_4" resultType="com.goisan.tabular.bean.export.Export">
        select internship_unit_name internshipUnitName,
               contact_person       contactPerson,
               contact_number       contactNumber,
               person_post          personPost,
               email                email,
               investigation        investigation
        from T_XG_EMPLOYMENT_UNIT u
    </select>

    <select id="expertExcel_A9_6_1" resultType="com.goisan.tabular.bean.export.Export">
        select FUNC_GET_TABLEVALUE(competition_name, 'T_JW_COMPETITION_PROJECT', 'ID',
                                   'COMPETITION_PROJECT')   competitionName,
               FUNC_GET_DICVALUE(COMPETITION_LEVEL, 'JSJB') competitionLevel,
               to_char(AWARD_TIME, 'yyyymmdd')              awardTime,
               NAME                                         studentName
        from T_JW_AWARD_WINNING w,
             T_JW_COMPETITION_PROJECT p
        where w.competition_name = p.id
    </select>

    <select id="expertExcel_A7_5" resultType="com.goisan.tabular.bean.export.Export">
        /*select FUNC_GET_TABLEVALUE(m.DEPARTMENTS_ID,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentName,m.MAJOR_CODE,MAJOR_NAME,MAJOR_DIRECTION,
      FUNC_GET_DICVALUE(MAJOR_DIRECTION, 'ZXZYFX') majorDirectionShow,
      NOW_MAJOR,
      FUNC_GET_DICVALUE(NOW_MAJOR, 'SF') as nowMajor,
      ORDERS_STUDENT_NUM,
      count(s.internship_id) internshipNum,
       count(es.EMPLOYMENT_ID) employmentNum
       from T_XG_MAJOR m left join  T_XG_INTERNSHIP_STUDENT s
       on m.major_code = s.major_code
       left join T_XG_EMPLOYMENT_STUDENT es on es.major_code = s.major_code
       group by m.MAJOR_CODE,m.DEPARTMENTS_ID,MAJOR_NAME,MAJOR_DIRECTION,NOW_MAJOR,NOW_MAJOR,ORDERS_STUDENT_NUM*/
        select *
        from (select FUNC_GET_TABLEVALUE(m.DEPARTMENTS_ID, 'T_SYS_DEPT', 'DEPT_ID', 'DEPT_NAME') departmentName,
                     m.MAJOR_CODE,
                     MAJOR_NAME,
                     MAJOR_DIRECTION,
                     FUNC_GET_DICVALUE(MAJOR_DIRECTION, 'ZXZYFX')                                majorDirectionShow,
                     NOW_MAJOR,
                     FUNC_GET_DICVALUE(NOW_MAJOR, 'SF') as                                       nowMajor,
                     ORDERS_STUDENT_NUM,
                     count(s.internship_id)                                                      internshipNum,
                     count(es.EMPLOYMENT_ID)                                                     employmentNum
              from T_XG_MAJOR m
                       left join T_XG_INTERNSHIP_STUDENT s
                                 on m.major_code = s.major_code
                       left join T_XG_EMPLOYMENT_STUDENT es on es.major_code = s.major_code
              group by m.MAJOR_CODE, m.DEPARTMENTS_ID, MAJOR_NAME, MAJOR_DIRECTION, NOW_MAJOR, NOW_MAJOR,
                       ORDERS_STUDENT_NUM) t,
             t_tab_cooperate t1
        where t.MAJOR_NAME = t1.majorname

    </select>
    <!--modify by hanjie end-->


    <!--modify by wangxue start-->
    <select id="expertExcel_A7_3_1" resultType="java.util.Map">
        select FUNC_GET_TABLEVALUE(m.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsIdShow, m.major_name, m.major_code,m.major_direction_code, m.major_direction, count(qt.student_id) studentNum, q.qualification_name, d.dic_name, q.qualification_authority, q.identification_site
        from t_tab_qualification_train qt
        inner join t_tab_qualification q on qt.qualification_id=q.id
        inner join t_xg_student s on qt.student_id=s.student_id
        inner join t_xg_student_class sc on s.student_id=sc.student_id
        inner join t_xg_class c on sc.class_id=c.class_id
        inner join t_xg_major m on c.major_code=m.major_code
        left join (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code='ZGZSDJ')) d on q.qualification_level=d.dic_code
        group by FUNC_GET_TABLEVALUE(m.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME'), m.major_name, m.major_code,m.major_direction_code, m.major_direction, q.qualification_name, d.dic_name, q.qualification_authority, q.identification_site
    </select>

    <select id="expertExcel_A7_3_2" resultType="java.util.Map">
        select FUNC_GET_TABLEVALUE(m.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME') departmentsIdShow,
        m.major_name,
        m.major_code,
        m.major_direction_code,
        m.major_direction,
        count(temp.student_id) studentNum,
        COUNT( CASE temp.qualification_level WHEN 1 then 1 else null end ) as p1,
        COUNT( CASE temp.qualification_level WHEN 2 then 1 else null end ) as p2,
        COUNT( CASE temp.qualification_level WHEN 3 then 1 else null end ) as p3,
        COUNT( CASE temp.qualification_level WHEN 4 then 1 else null end ) as p4,
        sum(tday) tday
        from (select qt.student_id, sum(qt.train_day) tday, min(q.qualification_level) qualification_level  from t_tab_qualification q, t_tab_qualification_train qt where qt.qualification_id=q.id group by qt.student_id) temp
        inner join t_xg_student s on temp.student_id=s.student_id and s.student_status='1'
        inner join t_xg_student_class sc on s.student_id=sc.student_id
        inner join t_xg_class c on sc.class_id=c.class_id
        inner join t_xg_major m on c.major_code=m.major_code
        group by FUNC_GET_TABLEVALUE(m.departments_id,'T_SYS_DEPT','DEPT_ID','DEPT_NAME'), m.major_name, m.major_code,m.major_direction_code, m.major_direction

    </select>

    <select id="expertExcel_A7_4" parameterType="com.goisan.educational.major.bean.Major"
            resultType="com.goisan.educational.major.bean.Major">
           select t.major_name majorName,
                   t.major_code majorCode,
                   t.major_direction majorDirection,
                   t.departments_id departmentsId,
                   t.MAJOR_DIRECTION_CODE majorDirectionCode,
                   a.internship_positions internshipPositions,
                   a.posts_time poststime,
                   FUNC_GET_TABLEVALUE(e.internship_unit_id,
                                       'T_XG_INTERNSHIP_UNIT',
                                       'INTERNSHIP_UNIT_ID',
                                       'INTERNSHIP_UNIT_NAME') internshipUnitIdShow,
                   DECODE(s.STUDENT_STATUS, '6', COUNT(STUDENT_STATUS), 0) numberGraduates,
                   DECODE(b.GRADUATION_FLAG, '3', COUNT(a.STUDENT_ID), 0) postPractice,
                   count(c.STUDENT_ID) enterpriseHiring,
                   DECODE(a.MAJOR_MATCH_FLAG, '1', COUNT(a.STUDENT_ID), 0) numberTrainees,
                   count(e.INTERNSHIP_UNIT_ID) numberInternships,
                   count(a.STUDENT_ID) numberInterns,
                   count(s.id) insuranceNumber,
                   count(a.INTERNSHIP_ID) totalNumber
             from t_xg_major t
                  left join T_XG_INTERNSHIP_STUDENT a
                    on t.major_code = a.major_code
                  left join T_XG_CLASS b
                    on a.class_id = b.class_id
                  LEFT JOIN T_XG_STUDENT_CLASS SC
                   ON b.CLASS_ID = SC.CLASS_ID
                  LEFT JOIN T_XG_STUDENT S
                   ON SC.STUDENT_ID = S.STUDENT_ID
                  left join T_XG_EMPLOYMENT_STUDENT c
                    on s.student_id = c.student_id
                  left join T_JY_PRACTICE_INSURANCE s
                    on c.class_id = s.class_id
                  left join T_XG_INTERNSHIP_UNIT_EXT d
                    on s.DEPARTMENTS_ID = d.DEPARTMENTS_ID
                  left join T_XG_INTERNSHIP_UNIT e
                    on d.INTERNSHIP_UNIT_ID = e.INTERNSHIP_UNIT_ID
                 group by t.major_name,
                          t.major_code,
                          t.major_direction,
                          t.departments_id,
                          t.MAJOR_DIRECTION_CODE,
                          a.internship_positions,
                          a.posts_time,
                          b.GRADUATION_FLAG,
                          e.internship_unit_id,
                          a.MAJOR_MATCH_FLAG,
                          s.STUDENT_STATUS

    </select>

    <select id="getExpertExcel_A8_1" resultType="com.goisan.table.bean.StudentDocuments">
        select t.ORDERNUMBER,
               t.FILENAME,
               to_char(t.RELEASEDATE, 'yyyymmdd')    releasedateStr,
               t.RELEASEDEPT,
               t.ALTERATION,
               to_char(t.ALTERATIONDATE, 'yyyymmdd') alterationdateStr,
               t.RESPONSIBLEDEPT
        from T_TAB_STUDENTDOCUMENTS t
    </select>

    <select id="getExpertExcel_A9_5" resultType="com.goisan.table.bean.Programme">
        select t.ORDERNUMBER,
               t.PROJECTNAME,
               t.PROJECTPROGRAMME,
               t.GRADE,
               to_char(t.RATIFYDATE, 'yyyymmdd') ratifydateStr,
               t.STAFF,
               t.REMARKS
        from T_TAB_PROGRAMME t
    </select>

    <select id="getExpertExcel_A10_3" resultType="com.goisan.table.bean.Associations">
        select t.ORDERNUMBER,
               t.COMMUNITYCODE,
               t.COMMUNITYNAME,
               t.COMMUNITYCATEGORY,
               to_char(t.REGISTRATIONDATE, 'yyyymmdd') registrationdateStr,
               t.APPROVALDEPARTMENT,
               t.REGISTRANTORGANIZATION,
               t.EXISTINGMEMBER,
               t.NAME,
               t.GRADE,
               t.MONEY,
               t.CREDIT,
               t.AWARDS,
               t.GUIDANCEDEPARTMENT,
               t.INSTRUCTORS
        from T_TAB_ASSOCIATIONS t
    </select>

    <select id="getExpertExcel_A4_4" resultType="com.goisan.table.bean.RedCross">
        select t.DEPARTMENT,
               t.COMMUNITYCODE,
               t.COMMUNITYNAME,
               to_char(t.FOUNDDATE, 'yyyymmdd') founddateStr,
               t.SUM,
               t.TEACHINGSTAFFNUMBER,
               t.STUDENTNUMBER,
               t.MONEYNUM,
               t.HANDIN,
               t.SELF,
               t.NAME,
               t.JOB,
               t.FUNDSSUM,
               t.MEMBERSHIPDUES,
               t.APPROPRIATEFUNDS,
               t.CONTRIBUTEMONEY,
               t.OTHER,
               t.CONTRIBUTESUM,
               t.GOVERNINGBODY,
               t.SELFPRESERVATION,
               t.ACTIVITYCONTENT,
               t.PERSONSUM,
               t.CERTIFICATENUMBER,
               t.COLLECTIONNUMBER,
               t.PAIRINGNUMBER
        from T_TAB_REDCROSS t
    </select>

    <select id="getExpertExcel_A4_5" resultType="com.goisan.table.bean.Volunteers">
        select t.DEPARTMENT,
               t.COMMUNITYCODE,
               t.COMMUNITYNAME,
               to_char(t.FOUNDDATE, 'yyyymmdd') founddateStr,
               t.SUM,
               t.TEACHINGSTAFFNUMBER,
               t.STUDENTNUMBER,
               t.NAME,
               t.JOB,
               t.ACTIVITYCONTENT,
               t.PERSONSUM,
               t.CERTIFICATENUMBER
        from T_TAB_VOLUNTEERS t
    </select>

    <!--modify by wangxue end-->


    <select id="expertExcel_GJ_311" resultType="com.goisan.tabular.bean.export.Export">
           select  m.major_name,m.major_code,FUNC_GET_DICVALUE(m.max_year, 'XYNX') as maxYearShow,m.max_year,FUNC_GET_DICVALUE(m.NORMAL_MAJOR, 'SF') as normalMajorShow,
m.NORMAL_MAJOR ,gradeNum,em.enrollNum,enrollGraNum,enrollSpringNum,enrollWillNum,schollTotal ,firstGrade ,secondGrade,thirdGrade,forGrade,willGrade
 from T_XG_MAJOR m  left join
 (select t1.major_code,count(t3.student_id) gradeNum   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id  and t1.graduation_flag = '3'and t3.Student_Status='1'
group by t1.major_code ) gm on gm.major_code = m.major_code left join
(select t1.major_code,count(t3.student_id) enrollNum   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id
group by t1.major_code ) em on em.major_code = m.major_code left join
 (select t1.major_code,count(t3.student_id) enrollGraNum   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and t3.en_sch_type = '1'
group by t1.major_code) egm on m.major_code = egm.major_code left join
(select t1.major_code,count(t3.student_id) enrollSpringNum   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and t3.en_sch_type = '2'
group by t1.major_code ) esn on m.major_code = esn.major_code left join
(select t1.major_code,count(t3.student_id) enrollWillNum   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and t3.en_sch_type = '3'
group by t1.major_code )ewn  on m.major_code = ewn.major_code left join
(select t1.major_code,count(t3.student_id) schollTotal   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id  and t3.Student_Status='1'
group by t1.major_code ) stl on m.major_code = stl.major_code left join
(select t1.major_code,count(t3.student_id) firstGrade  from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and  ceil(to_number(to_char(sysdate,'yyyy')) - t1.year) = 1 and t3.Student_Status='1'
group by t1.major_code ) fg on  m.major_code = fg.major_code  left join
(select t1.major_code,count(t3.student_id) secondGrade  from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and  ceil(to_number(to_char(sysdate,'yyyy')) - t1.year) = 2 and t3.Student_Status='1'
group by t1.major_code ) sg on  m.major_code = sg.major_code  left join
(select t1.major_code,count(t3.student_id) thirdGrade   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and  ceil(to_number(to_char(sysdate,'yyyy')) - t1.year) = 3 and t3.Student_Status='1'
group by t1.major_code ) tg on  m.major_code = tg.major_code  left join
(select t1.major_code,count(t3.student_id) forGrade   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id and  ceil(to_number(to_char(sysdate,'yyyy')) - t1.year) &gt;3 and t3.Student_Status='1'
group by t1.major_code ) fog on  m.major_code = fog.major_code  left join
(select t1.major_code,count(t3.student_id) willGrade   from T_XG_CLASS t1,T_XG_STUDENT_CLASS t2,T_XG_STUDENT t3
where t1.class_id = t2.class_id and t2.student_id = t3.student_id  and t1.graduation_flag = '3'
group by t1.major_code ) wg on  m.major_code = wg.major_code
    </select>

    <select id="expertExcel_GJ_321" resultType="com.goisan.tabular.bean.export.Export">
        select age17,girl17,age18 ,girl18 ,age19 ,girl19 ,age20 ,girl20  ,age21 ,girl21  ,age22 ,girl22, age23 ,girl23 ,age24 ,girl24
        ,age25 ,girl25 ,age26,girl26 ,age27,girl27 ,age28 ,girl28 ,age29 ,girl29 ,age30 ,girl30 ,age31 ,girl31 from
        (select count(t.student_id )age17 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) &lt;18)a17,
        (select count(t.student_id )girl17 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) &lt;18 and t.sex = '2')g17,
        (select count(t.student_id )age18 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 18) a18,
        (select count(t.student_id )girl18 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 18 and t.sex = '2')g18,
        (select count(t.student_id )age19 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 19) a19,
        (select count(t.student_id )girl19 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 19 and t.sex = '2')g19,
        (select count(t.student_id )age20 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 20) a20,
        (select count(t.student_id )girl20 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 20 and t.sex = '2')g20,
        (select count(t.student_id )age21 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 21) a21,
        (select count(t.student_id )girl21 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 21 and t.sex = '2')g21,
        (select count(t.student_id )age22 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 22) a22,
        (select count(t.student_id )girl22 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 22 and t.sex = '2')g22,
        (select count(t.student_id )age23 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 23) a23,
        (select count(t.student_id )girl23 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 23 and t.sex = '2')g23,
        (select count(t.student_id )age24 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 24) a24,
        (select count(t.student_id )girl24 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 24 and t.sex = '2')g24,
        (select count(t.student_id )age25 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 25) a25,
        (select count(t.student_id )girl25 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 25 and t.sex = '2')g25,
        (select count(t.student_id )age26 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 26) a26,
        (select count(t.student_id )girl26 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 26 and t.sex = '2')a26,
        (select count(t.student_id )age27 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 27) a27,
        (select count(t.student_id )girl27 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 27 and t.sex = '2')g27,
        (select count(t.student_id )age28 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 28) a28,
        (select count(t.student_id )girl28 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 28 and t.sex = '2')g28,
        (select count(t.student_id )age29 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 29) a29,
        (select count(t.student_id )girl29 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 29 and t.sex = '2')g29,
        (select count(t.student_id )age30 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 30) a30,
        (select count(t.student_id )girl30 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) = 30 and t.sex = '2')g30,
        (select count(t.student_id )age31 from T_XG_STUDENT t where  t.STUDENT_STATUS='1' and ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) &gt;30) a31,
        (select count(t.student_id )girl31 from T_XG_STUDENT t where t.STUDENT_STATUS='1' and  ceil(to_number(to_char(sysdate,'yyyy')) - to_char(BIRTHDAY,'yyyy')) &gt; 30 and t.sex = '2')g31
    </select>

    <select id="expertExcel_GJ_322" resultType="com.goisan.tabular.bean.export.Export">
        select beijingEn,beijingSch,tianjingEn,tianjingSch,hebeiEn,hebeiSch,shanxiEn,shanxiSch,nmgEn,nmgSch,liaolinEn,liaolinSch,hljEn,
hljSch,shanghaiEn,shanghaiSch,jiangsuEn,jiangsuSch,zejiangEn,zejiangSch,anhuiEn,anhuiSch,fujianEn,fujianSch,jiangxiEn,jiangxiSch,
shandongEn,shandongSch,henanEn,henanSch,hubeiEn,hubeiSch,hunanEn,hunanSch,guangdongEn,guangdongSch,guangxiEn,guangxiSch,hainanEn,
hainanSch,chongqingEn,chongqingSch,sichuanEn,sichuanSch,guizhouEn,guizhouSch,yunnanEn,yunnanSch,xizangEn,xizangSch,sxEn,sxSch,
gansuEn,gansuSch,qinhaiEn,qinhaiaSch,xinjiangEn,xinjiangSch,xianggangEn,xianggangSch,aomenEn,aomenSch,taiwanEn,taiwanSch,jilinEn,jilinSch,
lingxiaEn,lingxiaSch
from (
select count(t.student_id) beijingEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='110000'),
(select count(t.student_id) beijingSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='110000' and t.student_status = '1'),
(select count(t.student_id) tianjingEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='120000'),
(select count(t.student_id) tianjingSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='120000' and t.student_status = '1'),
(select count(t.student_id) hebeiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='130000'),
(select count(t.student_id) hebeiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='130000' and t.student_status = '1'),
(select count(t.student_id) shanxiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='140000'),
(select count(t.student_id) shanxiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='140000' and t.student_status = '1'),
(select count(t.student_id) nmgEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='150000'),
(select count(t.student_id) nmgSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='150000' and t.student_status = '1'),
(select count(t.student_id) liaolinEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='210000'),
(select count(t.student_id) liaolinSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='210000' and t.student_status = '1'),
(select count(t.student_id) hljEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='220000'),
(select count(t.student_id) hljSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='220000' and t.student_status = '1'),
(select count(t.student_id) shanghaiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='310000'),
(select count(t.student_id) shanghaiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='310000' and t.student_status = '1'),
(select count(t.student_id) jiangsuEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='320000'),
(select count(t.student_id) jiangsuSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='320000' and t.student_status = '1'),
(select count(t.student_id) zejiangEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='330000'),
(select count(t.student_id) zejiangSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='330000' and t.student_status = '1'),
(select count(t.student_id) anhuiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='340000'),
(select count(t.student_id) anhuiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='340000' and t.student_status = '1'),
(select count(t.student_id) fujianEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='350000'),
(select count(t.student_id) fujianSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='350000' and t.student_status = '1'),
(select count(t.student_id) jiangxiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='360000'),
(select count(t.student_id) jiangxiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='360000' and t.student_status = '1'),
(select count(t.student_id) shandongEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='370000'),
(select count(t.student_id) shandongSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='370000' and t.student_status = '1'),
(select count(t.student_id) henanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='410000'),
(select count(t.student_id) henanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='410000' and t.student_status = '1'),
(select count(t.student_id) hubeiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='420000'),
(select count(t.student_id) hubeiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='420000' and t.student_status = '1'),
(select count(t.student_id) hunanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='430000'),
(select count(t.student_id) hunanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='430000' and t.student_status = '1'),
(select count(t.student_id) guangdongEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='440000'),
(select count(t.student_id) guangdongSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='440000' and t.student_status = '1'),
(select count(t.student_id) guangxiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='450000'),
(select count(t.student_id) guangxiSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='450000' and t.student_status = '1'),
(select count(t.student_id) hainanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='460000'),
(select count(t.student_id) hainanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='460000' and t.student_status = '1'),
(select count(t.student_id) chongqingEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='500000'),
(select count(t.student_id) chongqingSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='500000' and t.student_status = '1'),
(select count(t.student_id) sichuanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='510000'),
(select count(t.student_id) sichuanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='510000' and t.student_status = '1'),
(select count(t.student_id) guizhouEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='520000'),
(select count(t.student_id) guizhouSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='520000' and t.student_status = '1'),
(select count(t.student_id) yunnanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='530000'),
(select count(t.student_id) yunnanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='530000' and t.student_status = '1'),
(select count(t.student_id) xizangEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='540000'),
(select count(t.student_id) xizangSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='540000' and t.student_status = '1'),
(select count(t.student_id) sxEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='610000'),
(select count(t.student_id) sxSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='610000' and t.student_status = '1'),
(select count(t.student_id) gansuEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='620000'),
(select count(t.student_id) gansuSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='620000' and t.student_status = '1'),
(select count(t.student_id) qinhaiEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='630000'),
(select count(t.student_id) qinhaiaSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='630000' and t.student_status = '1'),
(select count(t.student_id) lingxiaEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='640000'),
(select count(t.student_id) lingxiaSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='640000' and t.student_status = '1'),
(select count(t.student_id) xinjiangEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='650000'),
(select count(t.student_id) xinjiangSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='650000' and t.student_status = '1'),
(select count(t.student_id) xianggangEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='810000'),
(select count(t.student_id) xianggangSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='810000' and t.student_status = '1'),
(select count(t.student_id) aomenEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='820000'),
(select count(t.student_id) aomenSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='820000' and t.student_status = '1'),
(select count(t.student_id) taiwanEn from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='710000'),
(select count(t.student_id) taiwanSch from T_XG_STUDENT t where t.HOUSEHOLD_REGISTER_PROVINCE ='710000' and t.student_status = '1')
    </select>

    <select id="expertExcel_GJ_332" resultType="java.util.Map">
        select COUNT(CASE WHEN RETIRE_REASON='1' THEN 1 ELSE NULL END) hb,
        COUNT(CASE WHEN RETIRE_REASON='2' THEN 1 ELSE NULL END) tx,
        COUNT(CASE WHEN RETIRE_REASON='3' THEN 1 ELSE NULL END) sj,
        COUNT(CASE WHEN RETIRE_REASON='4' THEN 1 ELSE NULL END) xxcjbh,
        COUNT(CASE WHEN RETIRE_REASON='5' THEN 1 ELSE NULL END) cg,
        COUNT(CASE WHEN RETIRE_REASON='6' THEN 1 ELSE NULL END) other
         from T_XG_STUDENT t where t.student_status in( '2','5')
    </select>

    <select id="expertExcel_GJ_341" resultType="java.util.Map">
       select COUNT(CASE WHEN POLITICAL_STATUS='01' THEN 1 ELSE NULL END) GCDY,
         COUNT(CASE WHEN POLITICAL_STATUS='03' THEN 1 ELSE NULL END) GQTY,
        COUNT(CASE WHEN HOUSEHOLD_REGISTER_PROVINCE='810000' THEN 1 ELSE NULL END) XG,
        COUNT(CASE WHEN HOUSEHOLD_REGISTER_PROVINCE='820000' THEN 1 ELSE NULL END) AM,
        COUNT(CASE WHEN HOUSEHOLD_REGISTER_PROVINCE='710000' THEN 1 ELSE NULL END) TW,
        COUNT(CASE WHEN OVERSEAS_CHINESE='2' THEN 1 ELSE NULL END) HQ,
        COUNT(CASE WHEN NATION !='01' THEN 1 ELSE NULL END) SSMZ,
        COUNT(CASE WHEN DISABILITY ='1' THEN 1 ELSE NULL END) DIS
        from T_XG_STUDENT t where t.student_status = '1'
    </select>

    <select id="expertExcel_GJ_411" resultType="java.util.Map">
        select  '1' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.sex = '2'
  union
  select  '2' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.POSITIONAL_LEVEL = '1'
    union
  select  '2' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.POSITIONAL_LEVEL = '2'
    union
  select  '3' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.POSITIONAL_LEVEL = '3'
   union
  select  '4' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.POSITIONAL_LEVEL = '4'
    union
  select  '5' as type ,COUNT(CASE WHEN TEACHER_TYPE='1' THEN 1 ELSE NULL END) ZRJS,
 COUNT(CASE WHEN TEACHER_TYPE='2' THEN 1 ELSE NULL END) XZ,
  COUNT(CASE WHEN TEACHER_TYPE='3' THEN 1 ELSE NULL END) JF,
   COUNT(CASE WHEN TEACHER_TYPE='4' THEN 1 ELSE NULL END) GQ,
    COUNT(CASE WHEN TEACHER_TYPE='5' THEN 1 ELSE NULL END) KYJG,
     COUNT(CASE WHEN TEACHER_TYPE='6' THEN 1 ELSE NULL END) XBQY,
      COUNT(CASE WHEN TEACHER_TYPE='7' THEN 1 ELSE NULL END) QTFS,
       COUNT(CASE WHEN TEACHER_TYPE='8' THEN 1 ELSE NULL END) PQXW,
        COUNT(CASE WHEN TEACHER_TYPE='9' THEN 1 ELSE NULL END) LTX,
         COUNT(CASE WHEN TEACHER_TYPE='10' THEN 1 ELSE NULL END) FSZXX,
          COUNT(CASE WHEN TEACHER_TYPE='11' THEN 1 ELSE NULL END) JTSY
  from T_RS_EMPLOYEE e where e.POSITIONAL_LEVEL = '5'
    </select>

<select id="expertExcel_GJ_421" resultType="java.util.Map">
    select
'0' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id
union
select
'1' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id and e.POSITIONAL_LEVEL ='1'
union
select
'2' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id and e.POSITIONAL_LEVEL ='2'
union
select
'3' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id and e.POSITIONAL_LEVEL ='3'
union
select
'4' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id and e.POSITIONAL_LEVEL ='4'
union
select
'5' as type,
COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='1'and e.sex ='2' THEN 1 ELSE NULL END) GGKC,
COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='1' and e.sex ='2' THEN 1 ELSE NULL END) ZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='1' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)ZYSS,
 COUNT(CASE WHEN c.COURSE_TYPE = '1' and  e.TEACHER_TYPE='8'and e.sex ='2' THEN 1 ELSE NULL END) XWGG,
 COUNT(CASE WHEN c.COURSE_TYPE = '2' and  e.TEACHER_TYPE='8' and e.sex ='2' THEN 1 ELSE NULL END) XWZYALL,
COUNT(CASE WHEN c.COURSE_TYPE = '2'and  e.TEACHER_TYPE='8' and e.sex ='2' and e.DOUBLE_TYPE_FLAG='1' THEN 1 ELSE NULL END)XWZYSS
from T_RS_EMPLOYEE e , T_JW_TEACHINGTASK t,T_SYS_PARAMETER p ,T_JW_COURSE c where t.teacher_id = e.person_id
and p.code = t.semester and t.course_id = c.course_id and e.POSITIONAL_LEVEL ='5'
</select>

    <select id="expertExcel_GJ_812" parameterType="java.lang.String" resultType="java.util.Map" >
        select temp.*, (wwe+hsk+hui+zzbk+kekz+xb+man+mg+dwe+tte+tjk+els+qt) xj from
        (SELECT count(teacher_id) total,
        COUNT(CASE WHEN NATION='01' THEN 1 ELSE NULL END) han,
        COUNT (CASE WHEN NATION='05' THEN 1 ELSE NULL END) wwe,
        COUNT (CASE WHEN NATION='17' THEN 1 ELSE NULL END) hsk,
        COUNT (CASE WHEN NATION='03' THEN 1 ELSE NULL END) hui,
        COUNT (CASE WHEN NATION='43' THEN 1 ELSE NULL END) zzbk,
        COUNT (CASE WHEN NATION='29' THEN 1 ELSE NULL END) kekz,
        COUNT (CASE WHEN NATION='38' THEN 1 ELSE NULL END) xb,
        COUNT (CASE WHEN NATION='11' THEN 1 ELSE NULL END) man,
        COUNT (CASE WHEN NATION='02' THEN 1 ELSE NULL END) mg,
        COUNT (CASE WHEN NATION='31' THEN 1 ELSE NULL END) dwe,
        COUNT (CASE WHEN NATION='50' THEN 1 ELSE NULL END) tte,
        COUNT (CASE WHEN NATION='41' THEN 1 ELSE NULL END) tjk,
        COUNT (CASE WHEN NATION='44' THEN 1 ELSE NULL END) els,
        COUNT (CASE WHEN NATION='57' THEN 1 ELSE NULL END) qt
        FROM T_JW_TEACHER_CONDITION
        <if test="type != null and type != ''">
            where TEACHER_CATEGORY = #{type}
        </if>
        ) temp
    </select>

    <select id="expertExcel_GJ_812_zc" resultType="java.util.Map" >
        select temp.*, (wwe+hsk+hui+zzbk+kekz+xb+man+mg+dwe+tte+tjk+els+qt) xj from
        (SELECT dic_code, count(teacher_id) total,
        COUNT(CASE WHEN NATION='01' THEN 1 ELSE NULL END) han,
        COUNT (CASE WHEN NATION='05' THEN 1 ELSE NULL END) wwe,
        COUNT (CASE WHEN NATION='17' THEN 1 ELSE NULL END) hsk,
        COUNT (CASE WHEN NATION='03' THEN 1 ELSE NULL END) hui,
        COUNT (CASE WHEN NATION='43' THEN 1 ELSE NULL END) zzbk,
        COUNT (CASE WHEN NATION='29' THEN 1 ELSE NULL END) kekz,
        COUNT (CASE WHEN NATION='38' THEN 1 ELSE NULL END) xb,
        COUNT (CASE WHEN NATION='11' THEN 1 ELSE NULL END) man,
        COUNT (CASE WHEN NATION='02' THEN 1 ELSE NULL END) mg,
        COUNT (CASE WHEN NATION='31' THEN 1 ELSE NULL END) dwe,
        COUNT (CASE WHEN NATION='50' THEN 1 ELSE NULL END) tte,
        COUNT (CASE WHEN NATION='41' THEN 1 ELSE NULL END) tjk,
        COUNT (CASE WHEN NATION='44' THEN 1 ELSE NULL END) els,
        COUNT (CASE WHEN NATION='57' THEN 1 ELSE NULL END) qt
        FROM (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code='ZCJB')) d
        left join T_JW_TEACHER_CONDITION tc  on tc.title=d.dic_code and TEACHER_CATEGORY=1
        group by dic_code) temp
        order by dic_code
    </select>

    <select id="expertExcel_GJ_812_xl" resultType="java.util.Map" >
        select temp.*, (wwe+hsk+hui+zzbk+kekz+xb+man+mg+dwe+tte+tjk+els+qt) xj from
        (SELECT dic_code, count(teacher_id) total,
        COUNT(CASE WHEN NATION='01' THEN 1 ELSE NULL END) han,
        COUNT (CASE WHEN NATION='05' THEN 1 ELSE NULL END) wwe,
        COUNT (CASE WHEN NATION='17' THEN 1 ELSE NULL END) hsk,
        COUNT (CASE WHEN NATION='03' THEN 1 ELSE NULL END) hui,
        COUNT (CASE WHEN NATION='43' THEN 1 ELSE NULL END) zzbk,
        COUNT (CASE WHEN NATION='29' THEN 1 ELSE NULL END) kekz,
        COUNT (CASE WHEN NATION='38' THEN 1 ELSE NULL END) xb,
        COUNT (CASE WHEN NATION='11' THEN 1 ELSE NULL END) man,
        COUNT (CASE WHEN NATION='02' THEN 1 ELSE NULL END) mg,
        COUNT (CASE WHEN NATION='31' THEN 1 ELSE NULL END) dwe,
        COUNT (CASE WHEN NATION='50' THEN 1 ELSE NULL END) tte,
        COUNT (CASE WHEN NATION='41' THEN 1 ELSE NULL END) tjk,
        COUNT (CASE WHEN NATION='44' THEN 1 ELSE NULL END) els,
        COUNT (CASE WHEN NATION='57' THEN 1 ELSE NULL END) qt
        FROM (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code='XL') and dic_order>=6) d
        left join T_JW_TEACHER_CONDITION tc on tc.final_education=d.dic_code and TEACHER_CATEGORY=1 and tc.final_education>=6
        group by dic_code
        union all
        SELECT '5' dic_code, count(teacher_id) total,
        COUNT(CASE WHEN NATION='01' THEN 1 ELSE NULL END) han,
        COUNT (CASE WHEN NATION='05' THEN 1 ELSE NULL END) wwe,
        COUNT (CASE WHEN NATION='17' THEN 1 ELSE NULL END) hsk,
        COUNT (CASE WHEN NATION='03' THEN 1 ELSE NULL END) hui,
        COUNT (CASE WHEN NATION='43' THEN 1 ELSE NULL END) zzbk,
        COUNT (CASE WHEN NATION='29' THEN 1 ELSE NULL END) kekz,
        COUNT (CASE WHEN NATION='38' THEN 1 ELSE NULL END) xb,
        COUNT (CASE WHEN NATION='11' THEN 1 ELSE NULL END) man,
        COUNT (CASE WHEN NATION='02' THEN 1 ELSE NULL END) mg,
        COUNT (CASE WHEN NATION='31' THEN 1 ELSE NULL END) dwe,
        COUNT (CASE WHEN NATION='50' THEN 1 ELSE NULL END) tte,
        COUNT (CASE WHEN NATION='41' THEN 1 ELSE NULL END) tjk,
        COUNT (CASE WHEN NATION='44' THEN 1 ELSE NULL END) els,
        COUNT (CASE WHEN NATION='57' THEN 1 ELSE NULL END) qt
        FROM T_JW_TEACHER_CONDITION tc
        where TEACHER_CATEGORY=1 and tc.final_education<![CDATA[<]]>6
        ) temp order by dic_code desc
    </select>

    <select id="expertExcel_GJ_811" parameterType="java.lang.String" resultType="java.util.Map" >
        select temp.*, (wwe+hsk+hui+zzbk+kekz+xb+man+mg+dwe+tte+tjk+els+qt) xj from
        (SELECT count(s.student_id) total,
        COUNT(CASE WHEN NATION='01' THEN 1 ELSE NULL END) han,
        COUNT (CASE WHEN NATION='05' THEN 1 ELSE NULL END) wwe,
        COUNT (CASE WHEN NATION='17' THEN 1 ELSE NULL END) hsk,
        COUNT (CASE WHEN NATION='03' THEN 1 ELSE NULL END) hui,
        COUNT (CASE WHEN NATION='43' THEN 1 ELSE NULL END) zzbk,
        COUNT (CASE WHEN NATION='29' THEN 1 ELSE NULL END) kekz,
        COUNT (CASE WHEN NATION='38' THEN 1 ELSE NULL END) xb,
        COUNT (CASE WHEN NATION='11' THEN 1 ELSE NULL END) man,
        COUNT (CASE WHEN NATION='02' THEN 1 ELSE NULL END) mg,
        COUNT (CASE WHEN NATION='31' THEN 1 ELSE NULL END) dwe,
        COUNT (CASE WHEN NATION='50' THEN 1 ELSE NULL END) tte,
        COUNT (CASE WHEN NATION='41' THEN 1 ELSE NULL END) tjk,
        COUNT (CASE WHEN NATION='44' THEN 1 ELSE NULL END) els,
        COUNT (CASE WHEN NATION='57' THEN 1 ELSE NULL END) qt
        from t_xg_student s
        <if test="graduationFlag != null and graduationFlag != ''">
            inner join t_xg_student_class sc on s.student_id=sc.student_id
            inner join t_xg_class c on sc.class_id=c.class_id and c.graduation_flag=#{graduationFlag}
        </if>
        <if test="flag != null and flag != ''">
            where s.year=to_char(sysdate, 'yyyy')
        </if>
        ) temp
    </select>

    <select id="expertExcel_GJ_461_jzg" parameterType="java.lang.String" resultType="java.util.Map" >
        SELECT COUNT (CASE WHEN political_status='01' THEN 1 ELSE NULL END) gcdy,
        COUNT (CASE WHEN political_status='03' THEN 1 ELSE NULL END) gqty,
        COUNT (CASE WHEN to_number(political_status)>'3' and to_number(political_status)<![CDATA[<]]>12 THEN 1 ELSE NULL END) mzdp,
        '0' hq,
        COUNT(CASE WHEN native_place_province in ('810000','820000','710000') THEN 1 ELSE NULL END) gat,
        COUNT(CASE WHEN NATION!='01' THEN 1 ELSE NULL END) ssmz
        FROM t_rs_employee t
        where 1=1
        <if test="sex != null and sex != ''">
            and t.sex=#{sex}
        </if>
    </select>

    <select id="expertExcel_GJ_zrjs" parameterType="java.lang.String" resultType="java.util.Map" >
        SELECT COUNT (CASE WHEN politicalstatus='01' THEN 1 ELSE NULL END) gcdy,
        COUNT (CASE WHEN politicalstatus='03' THEN 1 ELSE NULL END) gqty,
        COUNT (CASE WHEN to_number(politicalstatus)>'3' and to_number(politicalstatus)<![CDATA[<]]>12 THEN 1 ELSE NULL END) mzdp,
        '0' hq,
        COUNT(CASE WHEN nativeplace in ('810000','820000','710000') THEN 1 ELSE NULL END) gat,
        COUNT(CASE WHEN NATION!='01' THEN 1 ELSE NULL END) ssmz,
        count(CASE WHEN title='1' THEN 1 ELSE NULL END) zg,
        count(CASE WHEN title='2' THEN 1 ELSE NULL END) fg,
        count(CASE WHEN title='3' THEN 1 ELSE NULL END) zj,
        count(CASE WHEN title='4' THEN 1 ELSE NULL END) cj,
        count(CASE WHEN title='5' THEN 1 ELSE NULL END) wdzj,
        count(t.teacher_id) total
        FROM T_JW_TEACHER_CONDITION t
        where TEACHER_CATEGORY=1
        <if test="sex != null and sex != ''">
            and t.teacher_sex=#{sex}
        </if>
    </select>

    <select id="expertExcel_GJ_423" parameterType="java.lang.String" resultType="java.util.Map" >
        <![CDATA[
        SELECT count(t.teacher_id) total,
        COUNT (CASE WHEN age<=29 THEN 1 ELSE NULL END) age1,
        COUNT (CASE WHEN age>=30 and age<=34 THEN 1 ELSE NULL END) age2,
        COUNT (CASE WHEN age>=35 and age<=39 THEN 1 ELSE NULL END) age3,
        COUNT (CASE WHEN age>=40 and age<=44 THEN 1 ELSE NULL END) age4,
        COUNT (CASE WHEN age>=45 and age<=49 THEN 1 ELSE NULL END) age5,
        COUNT (CASE WHEN age>=50 and age<=54 THEN 1 ELSE NULL END) age6,
        COUNT (CASE WHEN age>=55 and age<=59 THEN 1 ELSE NULL END) age7,
        COUNT (CASE WHEN age>=60 and age<=64 THEN 1 ELSE NULL END) age8,
        COUNT (CASE WHEN age>=65 THEN 1 ELSE NULL END) age9
        FROM (select teacher_id, TRUNC(months_between(sysdate, birthday)/12) AS age, title, teacher_sex, final_education, degee from T_JW_TEACHER_CONDITION c where TEACHER_CATEGORY=1) t
        ]]>
        <if test="sex != null and sex != ''">
            where t.teacher_sex=#{sex}
        </if>
        <if test="degee != null and degee != ''">
            where t.degee=#{degee}
        </if>
    </select>

    <select id="expertExcel_GJ_423_zc_xw" parameterType="java.lang.String" resultType="java.util.Map" >
        <![CDATA[
        SELECT dic_code, count(t.teacher_id) total,
        COUNT (CASE WHEN age<=29 THEN 1 ELSE NULL END) age1,
        COUNT (CASE WHEN age>=30 and age<=34 THEN 1 ELSE NULL END) age2,
        COUNT (CASE WHEN age>=35 and age<=39 THEN 1 ELSE NULL END) age3,
        COUNT (CASE WHEN age>=40 and age<=44 THEN 1 ELSE NULL END) age4,
        COUNT (CASE WHEN age>=45 and age<=49 THEN 1 ELSE NULL END) age5,
        COUNT (CASE WHEN age>=50 and age<=54 THEN 1 ELSE NULL END) age6,
        COUNT (CASE WHEN age>=55 and age<=59 THEN 1 ELSE NULL END) age7,
        COUNT (CASE WHEN age>=60 and age<=64 THEN 1 ELSE NULL END) age8,
        COUNT (CASE WHEN age>=65 THEN 1 ELSE NULL END) age9
        FROM (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code=#{code})) d
        left join (select teacher_id, TRUNC(months_between(sysdate, birthday)/12) AS age, title, teacher_sex, final_education, degee from T_JW_TEACHER_CONDITION where TEACHER_CATEGORY=1) t
        ]]>
        <if test="code != null and code == 'ZCJB'">
            on t.title=d.dic_code
        </if>
        <if test="code != null and code == 'XW'">
            on t.degee=d.dic_code
        </if>
        group by dic_code
        order by dic_code
    </select>

    <select id="expertExcel_GJ_423_xl" parameterType="java.lang.String" resultType="java.util.Map" >
        <![CDATA[
        select * from
        (SELECT dic_code, count(t.teacher_id) total,
        COUNT (CASE WHEN age<=29 THEN 1 ELSE NULL END) age1,
        COUNT (CASE WHEN age>=30 and age<=34 THEN 1 ELSE NULL END) age2,
        COUNT (CASE WHEN age>=35 and age<=39 THEN 1 ELSE NULL END) age3,
        COUNT (CASE WHEN age>=40 and age<=44 THEN 1 ELSE NULL END) age4,
        COUNT (CASE WHEN age>=45 and age<=49 THEN 1 ELSE NULL END) age5,
        COUNT (CASE WHEN age>=50 and age<=54 THEN 1 ELSE NULL END) age6,
        COUNT (CASE WHEN age>=55 and age<=59 THEN 1 ELSE NULL END) age7,
        COUNT (CASE WHEN age>=60 and age<=64 THEN 1 ELSE NULL END) age8,
        COUNT (CASE WHEN age>=65 THEN 1 ELSE NULL END) age9
        FROM (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code='XL') and dic_order>5) d
        left join (select teacher_id, TRUNC(months_between(sysdate, birthday)/12) AS age, title, teacher_sex, final_education, degee from T_JW_TEACHER_CONDITION where TEACHER_CATEGORY=1) t on t.final_education=d.dic_code
        group by dic_code
        union all
        SELECT '5' dic_code, count(t.teacher_id) total,
        COUNT (CASE WHEN age<=29 THEN 1 ELSE NULL END) age1,
        COUNT (CASE WHEN age>=30 and age<=34 THEN 1 ELSE NULL END) age2,
        COUNT (CASE WHEN age>=35 and age<=39 THEN 1 ELSE NULL END) age3,
        COUNT (CASE WHEN age>=40 and age<=44 THEN 1 ELSE NULL END) age4,
        COUNT (CASE WHEN age>=45 and age<=49 THEN 1 ELSE NULL END) age5,
        COUNT (CASE WHEN age>=50 and age<=54 THEN 1 ELSE NULL END) age6,
        COUNT (CASE WHEN age>=55 and age<=59 THEN 1 ELSE NULL END) age7,
        COUNT (CASE WHEN age>=60 and age<=64 THEN 1 ELSE NULL END) age8,
        COUNT (CASE WHEN age>=65 THEN 1 ELSE NULL END) age9
        FROM (select teacher_id, TRUNC(months_between(sysdate, birthday)/12) AS age, title, teacher_sex, final_education, degee from T_JW_TEACHER_CONDITION where TEACHER_CATEGORY=1 and final_education<6) t
        ) order by dic_code desc
        ]]>
    </select>

    <select id="expertExcel_GJ_422" parameterType="java.lang.String" resultType="java.util.Map" >
        <![CDATA[
        SELECT COUNT(CASE WHEN degee is not null THEN 1 ELSE NULL END) total,
        COUNT (CASE WHEN degee='3' THEN 1 ELSE NULL END) total_bs,
        COUNT (CASE WHEN degee='2' THEN 1 ELSE NULL END) total_ss,
        COUNT (CASE WHEN t.final_education='8' THEN 1 ELSE NULL END) bs,
        COUNT (CASE WHEN t.final_education='8' and degee='3' THEN 1 ELSE NULL END) bs_bs,
        COUNT (CASE WHEN t.final_education='8' and degee='2' THEN 1 ELSE NULL END) bs_ss,
        COUNT (CASE WHEN t.final_education='7' THEN 1 ELSE NULL END) ss,
        COUNT (CASE WHEN t.final_education='7' and degee='3' THEN 1 ELSE NULL END) ss_bs,
        COUNT (CASE WHEN t.final_education='7' and degee='2' THEN 1 ELSE NULL END) ss_ss,
        COUNT (CASE WHEN t.final_education='6' THEN 1 ELSE NULL END) bk,
        COUNT (CASE WHEN t.final_education='6' and degee='3' THEN 1 ELSE NULL END) bk_bs,
        COUNT (CASE WHEN t.final_education='6' and degee='1' THEN 1 ELSE NULL END) bk_ss,
        COUNT (CASE WHEN t.final_education<'6' THEN 1 ELSE NULL END) zk,
        COUNT (CASE WHEN t.final_education<'6' and degee='3' THEN 1 ELSE NULL END) zk_bs,
        COUNT (CASE WHEN t.final_education<'6' THEN 1 ELSE NULL END) zk_ss
        ]]>
        FROM T_JW_TEACHER_CONDITION t
        where (TEACHER_CATEGORY=#{category}
        <if test="category2 != null and category2 != ''">
            or TEACHER_CATEGORY=#{category2}
        </if>
        )
        <if test="sex != null and sex != ''">
            and teacher_sex=#{sex}
        </if>
    </select>

    <select id="expertExcel_GJ_422_zc" parameterType="java.lang.String" resultType="java.util.Map" >
        <![CDATA[
        SELECT dic_code, COUNT(CASE WHEN degee is not null THEN 1 ELSE NULL END) total,
        COUNT (CASE WHEN degee='3' THEN 1 ELSE NULL END) total_bs,
        COUNT (CASE WHEN degee='2' THEN 1 ELSE NULL END) total_ss,
        COUNT (CASE WHEN t.final_education='8' THEN 1 ELSE NULL END) bs,
        COUNT (CASE WHEN t.final_education='8' and degee='3' THEN 1 ELSE NULL END) bs_bs,
        COUNT (CASE WHEN t.final_education='8' and degee='2' THEN 1 ELSE NULL END) bs_ss,
        COUNT (CASE WHEN t.final_education='7' THEN 1 ELSE NULL END) ss,
        COUNT (CASE WHEN t.final_education='7' and degee='3' THEN 1 ELSE NULL END) ss_bs,
        COUNT (CASE WHEN t.final_education='7' and degee='2' THEN 1 ELSE NULL END) ss_ss,
        COUNT (CASE WHEN t.final_education='6' THEN 1 ELSE NULL END) bk,
        COUNT (CASE WHEN t.final_education='6' and degee='3' THEN 1 ELSE NULL END) bk_bs,
        COUNT (CASE WHEN t.final_education='6' and degee='1' THEN 1 ELSE NULL END) bk_ss,
        COUNT (CASE WHEN t.final_education<'6' THEN 1 ELSE NULL END) zk,
        COUNT (CASE WHEN t.final_education<'6' and degee='3' THEN 1 ELSE NULL END) zk_bs,
        COUNT (CASE WHEN t.final_education<'6' THEN 1 ELSE NULL END) zk_ss
        FROM (select dic_name, dic_code from t_sys_dic where parent_id=(select id from t_sys_dic where dic_code='ZCJB')) d
        ]]>
        left join T_JW_TEACHER_CONDITION t on t.title=d.dic_code and (TEACHER_CATEGORY=#{category}
        <if test="category2 != null and category2 != ''">
            or TEACHER_CATEGORY=#{category2}
        </if>
        )
        group by dic_code
        order by dic_code
    </select>

</mapper>